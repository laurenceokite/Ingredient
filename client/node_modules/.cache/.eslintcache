[{"/Users/laurenceokite/Documents/projects/recipes/client/src/App.tsx":"1","/Users/laurenceokite/Documents/projects/recipes/client/src/index.tsx":"2","/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.tsx":"3","/Users/laurenceokite/Documents/projects/recipes/client/src/components/UnitSelect/index.tsx":"4","/Users/laurenceokite/Documents/projects/recipes/client/src/components/Recipe/index.tsx":"5","/Users/laurenceokite/Documents/projects/recipes/client/src/components/Recipe/Ingredient.tsx":"6","/Users/laurenceokite/Documents/projects/recipes/client/src/components/ToggleGlobals/index.tsx":"7","/Users/laurenceokite/Documents/projects/recipes/client/src/components/Recipe/Recipe.tsx":"8"},{"size":186,"mtime":1653479560569,"results":"9","hashOfConfig":"10"},{"size":198,"mtime":1653479560570,"results":"11","hashOfConfig":"10"},{"size":3011,"mtime":1653655941985,"results":"12","hashOfConfig":"10"},{"size":1214,"mtime":1653479560570,"results":"13","hashOfConfig":"10"},{"size":3029,"mtime":1653649336249,"results":"14","hashOfConfig":"10"},{"size":4601,"mtime":1653655737870,"results":"15","hashOfConfig":"10"},{"size":1422,"mtime":1653591254354,"results":"16","hashOfConfig":"10"},{"size":1880,"mtime":1653655222178,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"aiqusn",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},"/Users/laurenceokite/Documents/projects/recipes/client/src/App.tsx",[],["37","38"],"/Users/laurenceokite/Documents/projects/recipes/client/src/index.tsx",[],"/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.tsx",[],"/Users/laurenceokite/Documents/projects/recipes/client/src/components/UnitSelect/index.tsx",[],"/Users/laurenceokite/Documents/projects/recipes/client/src/components/Recipe/index.tsx",[],"/Users/laurenceokite/Documents/projects/recipes/client/src/components/Recipe/Ingredient.tsx",[],["39","40"],"/Users/laurenceokite/Documents/projects/recipes/client/src/components/ToggleGlobals/index.tsx",[],"/Users/laurenceokite/Documents/projects/recipes/client/src/components/Recipe/Recipe.tsx",["41"],"import { Ingredient, IStandardValues, returnWeightOrVolume } from \"./Ingredient\";\nimport { makeAutoObservable } from 'mobx'\n\ntype GlobalSystems = 'metric' | 'us';\ntype GlobalUnits = 'weight' | 'volume';\nexport type State = `${GlobalSystems}_${GlobalUnits}`;\n\nexport class Recipe {\n    multiplier = 1;\n\n    data: Ingredient;\n    system: GlobalSystems;\n    units: GlobalUnits;\n    state: State;\n    anchorIndex: number;\n    name?: string;\n    ingredients: Ingredient[];\n\n    constructor(system: GlobalSystems, units: GlobalUnits, anchorIndex: number, name?: string, ingredients?: Ingredient[]) {\n        this.data = new Ingredient();//gets info to pass to selects\n\n        makeAutoObservable(this);//mobx state observer.\n\n        this.system = system;\n        this.units = units;\n        this.state = `${this.system}_${this.units}`\n        this.anchorIndex = anchorIndex;\n        this.ingredients = [];\n        \n        if (name) this.name = name;\n        if (ingredients) this.ingredients = ingredients;\n    }\n\n    //get bakers percent of ingredient\n    bakersPercent(index: number): number {\n        const anchor = this.ingredients[this.anchorIndex];\n\n        const weightOrVol = returnWeightOrVolume(this.state);\n\n        const anchorValue = anchor.standard[weightOrVol] || 0;\n\n        console.log(anchor.standard[weightOrVol]);\n        \n        const ingredientValue = this.ingredients[index].standard[weightOrVol] || 0;\n            \n        return (ingredientValue / anchorValue) * 100;\n    }\n\n    //change recipe system and/or unit\n    changeState(system: GlobalSystems, units: GlobalUnits): Recipe {\n        this.system = system;\n        this.units = units;\n        \n        this.state = `${this.system}_${this.units}`;\n\n        return this;\n    }\n\n    addIngredient(ingredient: Ingredient): Recipe {\n        this.ingredients.push(ingredient);\n\n        return this;\n    }\n}\n\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"46"},{"ruleId":"44","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":22,"nodeType":"50","messageId":"51","endLine":1,"endColumn":37},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],["52"],["53"],"@typescript-eslint/no-unused-vars","'IStandardValues' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]