{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/client/src/components/ToggleGlobals/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToggleGlobals = _s(observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    recipe\n  } = _ref;\n  const [state, dispatch] = useStoreContext();\n  const system = recipe.system;\n  const units = recipe.units;\n\n  const handleChange = event => {\n    const {\n      value,\n      id\n    } = event.target;\n    console.log(id, recipe);\n    if (id === 'system') recipe.changeState(value, units);\n    if (id === 'units') recipe.changeState(system, value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"toggle-measure\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"system\",\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"metric\",\n          children: \"M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"us\",\n          children: \"US\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"units\",\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"weight\",\n          children: \"WEIGHT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"volume\",\n          children: \"VOLUME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        defaultValue: state.recipeState.percent,\n        placeholder: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \" X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}, \"AaULK2aEGk5riJKW01t0FPXyxro=\", false, function () {\n  return [useStoreContext];\n})), \"AaULK2aEGk5riJKW01t0FPXyxro=\", false, function () {\n  return [useStoreContext];\n});\n\n_c2 = ToggleGlobals;\nexport default ToggleGlobals;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToggleGlobals$observer\");\n$RefreshReg$(_c2, \"ToggleGlobals\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/client/src/components/ToggleGlobals/index.tsx"],"names":["React","observer","useStoreContext","ToggleGlobals","recipe","state","dispatch","system","units","handleChange","event","value","id","target","console","log","changeState","recipeState","percent"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,eAAT,QAAgC,yBAAhC;AAEA,OAAO,aAAP;;;AAMA,MAAMC,aAAa,MAAGF,QAAQ,SAAC,QAAgC;AAAA;;AAAA,MAA/B;AAAEG,IAAAA;AAAF,GAA+B;AAC3D,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBJ,eAAe,EAA3C;AACA,QAAMK,MAAM,GAAGH,MAAM,CAACG,MAAtB;AACA,QAAMC,KAAK,GAAGJ,MAAM,CAACI,KAArB;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAmC;AACpD,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAgBF,KAAK,CAACG,MAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAgBR,MAAhB;AAEA,QAAIQ,EAAE,KAAK,QAAX,EAAqBR,MAAM,CAACY,WAAP,CAAoBL,KAApB,EAA2BH,KAA3B;AAErB,QAAII,EAAE,KAAK,OAAX,EAAoBR,MAAM,CAACY,WAAP,CAAoBT,MAApB,EAA4BI,KAA5B;AACvB,GAPD;;AASA,sBACI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA,4BAEI;AAAA,8BAEI;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAoB,QAAA,QAAQ,EAAEF,YAA9B;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAmB,QAAA,QAAQ,EAAEA,YAA7B;AAAA,gCACQ;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAEQ;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAcI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,YAAY,EAAEJ,KAAK,CAACY,WAAN,CAAkBC,OAArD;AAA8D,QAAA,WAAW,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAnC6B;AAAA,UACEhB,eADF;AAAA,GAAX;AAAA,UACaA,eADb;AAAA,EAAnB;;MAAMC,a;AAqCN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { Recipe } from '../Recipe/Recipe';\nimport './index.css'\n\ninterface IToggleGlobals {\n    recipe: Recipe;\n}\n\nconst ToggleGlobals = observer(({ recipe }: IToggleGlobals) => {\n    const [ state, dispatch ] = useStoreContext();\n    const system = recipe.system;\n    const units = recipe.units;\n\n    const handleChange = (event: React.FormEvent): void =>  {\n        const { value, id } = event.target as HTMLFormElement;\n        console.log(id, recipe);\n\n        if (id === 'system') recipe.changeState( value, units );\n\n        if (id === 'units') recipe.changeState( system, value );\n    }\n\n    return (\n        <form className='toggle-measure'> \n            {/* Measurement Options */}\n            <div>\n                {/* system */}\n                <select id='system' onChange={handleChange}>\n                    <option value=\"metric\">M</option>\n                    <option value=\"us\">US</option>\n                </select>\n                {/* type */}\n                <select id='units' onChange={handleChange}>\n                        <option value=\"weight\">WEIGHT</option>\n                        <option value=\"volume\">VOLUME</option>\n                </select>\n            </div>\n            <div className='edit-percent'>\n                <input type='number' defaultValue={state.recipeState.percent} placeholder='100'></input>\n                <a> X</a>\n            </div>\n        </form>\n    )\n});\n\nexport default ToggleGlobals;"]},"metadata":{},"sourceType":"module"}