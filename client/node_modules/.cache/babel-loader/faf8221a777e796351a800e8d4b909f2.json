{"ast":null,"code":"export function convertSubMeasure(current, requested, measurement) {\n  const conversion = `${current}->${requested}`;\n\n  switch (conversion) {\n    //metric weight\n    case 'grams->milligrams':\n      return measurement * 100;\n\n    case 'grams->kilograms':\n      return measurement * .001;\n\n    case 'milligrams->grams':\n      return measurement * .01;\n\n    case 'milligrams->kilograms':\n      return measurement * .00001;\n\n    case 'kilograms->milligrams':\n      return measurement * 100000;\n\n    case 'kilograms->grams':\n      return measurement * 1000;\n    //metric volume\n\n    case 'liters->deciliters':\n      return measurement * 10;\n\n    case 'liters->milliliters':\n      return measurement * 1000;\n\n    case 'deciliters->liters':\n      return measurement * .1;\n\n    case 'deciliters->milliliters':\n      return measurement * 100;\n\n    case 'milliliters->liters':\n      return measurement * .001;\n\n    case 'milliliters->deciliters':\n      return measurement * .01;\n    //imperial weight\n\n    case 'pounds->ounces':\n      return measurement * 16;\n\n    case 'ounces->pounds':\n      return measurement / 16;\n    //imperial volume \n    //fl oz->\n\n    case 'fluid-ounces->teaspoons':\n      return measurement * 6;\n\n    case 'fluid-ounces->tablespoons':\n      return measurement * 2;\n\n    case 'fluid-ounces->cups':\n      return measurement * .123223;\n\n    case 'fluid-ounces->quarts':\n      return measurement * .03125;\n\n    case 'fluid-ounces->gallons':\n      return measurement * .007812;\n    //teaspoons->\n\n    case 'teaspoons->fluid-ounces':\n      return measurement * .166667;\n\n    case 'teaspoons->tablespoons':\n      return measurement * .333333;\n\n    case 'teaspoons->cups':\n      return measurement * .020537;\n\n    case 'teaspoons->quarts':\n      return measurement * .005208;\n\n    case 'teaspoons->gallons':\n      return measurement * .001302;\n  }\n}\nexport function convertMeasure(current, requested, measurement, submeasure) {\n  const conversion = `${current}->${requested}`;\n\n  switch (conversion) {\n    case 'weight-metric->':\n  }\n}","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/src/utils/helpers.js"],"names":["convertSubMeasure","current","requested","measurement","conversion","convertMeasure","submeasure"],"mappings":"AAAA,OAAO,SAASA,iBAAT,CAA2BC,OAA3B,EAAoCC,SAApC,EAA+CC,WAA/C,EAA4D;AAC/D,QAAMC,UAAU,GAAI,GAAEH,OAAQ,KAAIC,SAAU,EAA5C;;AAEA,UAAOE,UAAP;AACI;AACA,SAAK,mBAAL;AACI,aAAOD,WAAW,GAAC,GAAnB;;AAEJ,SAAK,kBAAL;AACI,aAAOA,WAAW,GAAC,IAAnB;;AAEJ,SAAK,mBAAL;AACI,aAAOA,WAAW,GAAC,GAAnB;;AAEJ,SAAK,uBAAL;AACI,aAAOA,WAAW,GAAC,MAAnB;;AAEJ,SAAK,uBAAL;AACI,aAAOA,WAAW,GAAC,MAAnB;;AAEJ,SAAK,kBAAL;AACI,aAAOA,WAAW,GAAC,IAAnB;AAEJ;;AACA,SAAK,oBAAL;AACI,aAAOA,WAAW,GAAC,EAAnB;;AAEJ,SAAK,qBAAL;AACI,aAAOA,WAAW,GAAC,IAAnB;;AAEJ,SAAK,oBAAL;AACI,aAAOA,WAAW,GAAC,EAAnB;;AAEJ,SAAK,yBAAL;AACI,aAAOA,WAAW,GAAC,GAAnB;;AAEJ,SAAK,qBAAL;AACI,aAAOA,WAAW,GAAC,IAAnB;;AAEJ,SAAK,yBAAL;AACI,aAAOA,WAAW,GAAC,GAAnB;AAEJ;;AACA,SAAK,gBAAL;AACI,aAAOA,WAAW,GAAC,EAAnB;;AAEJ,SAAK,gBAAL;AACI,aAAOA,WAAW,GAAC,EAAnB;AAEJ;AACI;;AACJ,SAAK,yBAAL;AACI,aAAOA,WAAW,GAAC,CAAnB;;AAEJ,SAAK,2BAAL;AACI,aAAOA,WAAW,GAAC,CAAnB;;AAEJ,SAAK,oBAAL;AACI,aAAOA,WAAW,GAAC,OAAnB;;AAEJ,SAAK,sBAAL;AACI,aAAOA,WAAW,GAAC,MAAnB;;AAEJ,SAAK,uBAAL;AACI,aAAOA,WAAW,GAAC,OAAnB;AAEA;;AACJ,SAAK,yBAAL;AACI,aAAOA,WAAW,GAAC,OAAnB;;AAEJ,SAAK,wBAAL;AACI,aAAOA,WAAW,GAAC,OAAnB;;AAEJ,SAAK,iBAAL;AACI,aAAOA,WAAW,GAAC,OAAnB;;AAEJ,SAAK,mBAAL;AACI,aAAOA,WAAW,GAAC,OAAnB;;AAEJ,SAAK,oBAAL;AACI,aAAOA,WAAW,GAAC,OAAnB;AA7ER;AA+EH;AAED,OAAO,SAASE,cAAT,CAAwBJ,OAAxB,EAAiCC,SAAjC,EAA4CC,WAA5C,EAAyDG,UAAzD,EAAqE;AACxE,QAAMF,UAAU,GAAI,GAAEH,OAAQ,KAAIC,SAAU,EAA5C;;AAEA,UAAOE,UAAP;AACI,SAAK,iBAAL;AADJ;AAIH","sourcesContent":["export function convertSubMeasure(current, requested, measurement) {\n    const conversion = `${current}->${requested}`;\n\n    switch(conversion) {\n        //metric weight\n        case 'grams->milligrams':\n            return measurement*100;\n     \n        case 'grams->kilograms':\n            return measurement*.001;\n        \n        case 'milligrams->grams':\n            return measurement*.01;\n        \n        case 'milligrams->kilograms':\n            return measurement*.00001;\n        \n        case 'kilograms->milligrams':\n            return measurement*100000;   \n\n        case 'kilograms->grams':\n            return measurement*1000;\n\n        //metric volume\n        case 'liters->deciliters':\n            return measurement*10;\n        \n        case 'liters->milliliters':\n            return measurement*1000;\n        \n        case 'deciliters->liters':\n            return measurement*.1;\n\n        case 'deciliters->milliliters':\n            return measurement*100;\n        \n        case 'milliliters->liters':\n            return measurement*.001;\n        \n        case 'milliliters->deciliters':\n            return measurement*.01;\n\n        //imperial weight\n        case 'pounds->ounces':\n            return measurement*16;\n\n        case 'ounces->pounds':\n            return measurement/16;\n\n        //imperial volume \n            //fl oz->\n        case 'fluid-ounces->teaspoons':\n            return measurement*6;\n\n        case 'fluid-ounces->tablespoons':\n            return measurement*2;\n\n        case 'fluid-ounces->cups':\n            return measurement*.123223;\n\n        case 'fluid-ounces->quarts':\n            return measurement*.03125;\n\n        case 'fluid-ounces->gallons':\n            return measurement*.007812;\n\n            //teaspoons->\n        case 'teaspoons->fluid-ounces':\n            return measurement*.166667;\n\n        case 'teaspoons->tablespoons':\n            return measurement*.333333;\n\n        case 'teaspoons->cups':\n            return measurement*.020537;\n\n        case 'teaspoons->quarts':\n            return measurement*.005208;\n\n        case 'teaspoons->gallons':\n            return measurement*.001302;\n    }\n}\n\nexport function convertMeasure(current, requested, measurement, submeasure) {\n    const conversion = `${current}->${requested}`;\n\n    switch(conversion) {\n        case 'weight-metric->':\n\n    }\n}"]},"metadata":{},"sourceType":"module"}