{"ast":null,"code":"export function convertSubMeasure(current, requested, measurement) {\n  const conversion = `${current}->${requested}`;\n  const measurementInt = parseInt(measurement);\n\n  switch (conversion) {\n    case 'grams->milligrams':\n      return toString(measurementInt * 100);\n\n    case 'grams->kilograms':\n      return toString(measurementInt / 1000);\n\n    case 'milligrams->grams':\n      return toString(measurementInt / 100);\n\n    case 'milligrams->kilograms':\n      return toString(measurementInt / 100000);\n\n    case 'kilograms->milligrams':\n      return toString(measurementInt * 100000);\n\n    case 'kilograms->grams':\n      return toString(measurementInt * 1000);\n  }\n}","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/src/utils/helpers.js"],"names":["convertSubMeasure","current","requested","measurement","conversion","measurementInt","parseInt","toString"],"mappings":"AAAA,OAAO,SAASA,iBAAT,CAA2BC,OAA3B,EAAoCC,SAApC,EAA+CC,WAA/C,EAA4D;AAC/D,QAAMC,UAAU,GAAI,GAAEH,OAAQ,KAAIC,SAAU,EAA5C;AACA,QAAMG,cAAc,GAAGC,QAAQ,CAACH,WAAD,CAA/B;;AAEA,UAAOC,UAAP;AACI,SAAK,mBAAL;AACI,aAAQG,QAAQ,CAACF,cAAc,GAAC,GAAhB,CAAhB;;AAEJ,SAAK,kBAAL;AACI,aAAQE,QAAQ,CAACF,cAAc,GAAC,IAAhB,CAAhB;;AAEJ,SAAK,mBAAL;AACI,aAAQE,QAAQ,CAACF,cAAc,GAAC,GAAhB,CAAhB;;AAEJ,SAAK,uBAAL;AACI,aAAQE,QAAQ,CAACF,cAAc,GAAC,MAAhB,CAAhB;;AAEJ,SAAK,uBAAL;AACI,aAAQE,QAAQ,CAACF,cAAc,GAAC,MAAhB,CAAhB;;AAEJ,SAAK,kBAAL;AACI,aAAQE,QAAQ,CAACF,cAAc,GAAC,IAAhB,CAAhB;AAjBR;AAoBH","sourcesContent":["export function convertSubMeasure(current, requested, measurement) {\n    const conversion = `${current}->${requested}`;\n    const measurementInt = parseInt(measurement);\n\n    switch(conversion) {\n        case 'grams->milligrams':\n            return (toString(measurementInt*100));\n     \n        case 'grams->kilograms':\n            return (toString(measurementInt/1000));\n        \n        case 'milligrams->grams':\n            return (toString(measurementInt/100));\n        \n        case 'milligrams->kilograms':\n            return (toString(measurementInt/100000));\n        \n        case 'kilograms->milligrams':\n            return (toString(measurementInt*100000));   \n\n        case 'kilograms->grams':\n            return (toString(measurementInt*1000));   \n\n    }\n}"]},"metadata":{},"sourceType":"module"}