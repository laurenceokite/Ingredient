{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/src/components/ToggleMeasure/index.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToggleMeasure() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"measureOptions\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"unitOfMeasure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"unitOfMeasure\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"metric\",\n        children: \"M\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"imperial\",\n        children: \"I\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"typeOfMeasure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"typeOfMeasure\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"weight\",\n        children: \"WEIGHT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"volume\",\n        children: \"VOLUME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"autoConvertToggle\",\n      children: \"autoconvert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      className: \"autoConvertToggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ToggleMeasure;\nexport default ToggleMeasure;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleMeasure\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/src/components/ToggleMeasure/index.js"],"names":["React","useState","ToggleMeasure"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,aAAT,GAAyB;AACrB,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BAEI;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAOI;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA,8BACQ;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAYI;AAAO,MAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;KAlBQA,a;AAoBT,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction ToggleMeasure() {\n    return (\n        <div className=\"measureOptions\">\n            {/* Measurement Options */}\n            <label htmlFor=\"unitOfMeasure\"></label>\n            <select className=\"unitOfMeasure\">\n                <option value=\"metric\">M</option>\n                <option value=\"imperial\">I</option>\n            </select>\n            <label htmlFor=\"typeOfMeasure\"></label>\n            <select className=\"typeOfMeasure\">\n                    <option value=\"weight\">WEIGHT</option>\n                    <option value=\"volume\">VOLUME</option>\n            </select>\n            <label htmlFor=\"autoConvertToggle\">autoconvert</label>\n            <input type=\"checkbox\" className=\"autoConvertToggle\"></input>\n        </div>\n    )\n}\n\nexport default ToggleMeasure;"]},"metadata":{},"sourceType":"module"}