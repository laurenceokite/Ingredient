{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport UnitSelect from \"../UnitSelect\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RenderIngredient = _ref => {\n  _s();\n\n  let {\n    data,\n    currentUnits,\n    index\n  } = _ref;\n  const [state, dispatch] = useStoreContext();\n  const globalSystem = state.globalSystem;\n  const globalUnit = state.globalUnit; //this is the state as a key of Ingredient object\n\n  const keyOfIngredient = `${globalSystem}_${globalUnit}`;\n  const thisUnit = data.returnSelected(keyOfIngredient).unit;\n  const thisValue = data.returnSelected(keyOfIngredient).value;\n\n  const handleChangeUnit = event => {\n    const {\n      value\n    } = event.target;\n    data.updateSelected(keyOfIngredient, value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"ingredient-name\",\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"ingredient-measurement\",\n        children: data.returnSelected(keyOfIngredient).value ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: data.returnSelected(keyOfIngredient).value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"No Amt.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        id: \"unitSelect\",\n        className: \"unit-select\",\n        onChange: handleChangeUnit,\n        children: /*#__PURE__*/_jsxDEV(UnitSelect, {\n          ingredient: data,\n          currentUnits: currentUnits,\n          keyOfIngredient: keyOfIngredient,\n          selectedUnit: data.returnSelected(keyOfIngredient)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RenderIngredient, \"AaULK2aEGk5riJKW01t0FPXyxro=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = RenderIngredient;\nexport default RenderIngredient;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderIngredient\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.tsx"],"names":["React","UnitSelect","useStoreContext","RenderIngredient","data","currentUnits","index","state","dispatch","globalSystem","globalUnit","keyOfIngredient","thisUnit","returnSelected","unit","thisValue","value","handleChangeUnit","event","target","updateSelected","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,eAAT,QAA6E,yBAA7E;AAEA,OAAO,aAAP;;;AAQA,MAAMC,gBAAgB,GAAG,QAA+D;AAAA;;AAAA,MAA9D;AAAEC,IAAAA,IAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,GAA8D;AACpF,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBN,eAAe,EAA3C;AAEA,QAAMO,YAA2B,GAAGF,KAAK,CAACE,YAA1C;AACA,QAAMC,UAAuB,GAAGH,KAAK,CAACG,UAAtC,CAJoF,CAMpF;;AACA,QAAMC,eAAgC,GAAI,GAAEF,YAAa,IAAGC,UAAW,EAAvE;AAEA,QAAME,QAAQ,GAAGR,IAAI,CAACS,cAAL,CAAoBF,eAApB,EAAqCG,IAAtD;AACA,QAAMC,SAAS,GAAGX,IAAI,CAACS,cAAL,CAAoBF,eAApB,EAAqCK,KAAvD;;AAEA,QAAMC,gBAAgB,GAAIC,KAAD,IAAkC;AACvD,UAAM;AAAEF,MAAAA;AAAF,QAAYE,KAAK,CAACC,MAAxB;AAEAf,IAAAA,IAAI,CAACgB,cAAL,CAAoBT,eAApB,EAAqCK,KAArC;AACH,GAJD;;AAMA,sBACI;AAAA,2BACK;AAAA,8BACG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBAAiCZ,IAAI,CAACiB;AAAtC;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA,kBACOjB,IAAI,CAACS,cAAL,CAAoBF,eAApB,EAAqCK,KAArC,gBACI;AAAA,oBAAMZ,IAAI,CAACS,cAAL,CAAoBF,eAApB,EAAqCK;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADJ,gBAEI;AAAA,iCACC;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAHX;AAAA;AAAA;AAAA;AAAA,cAFH,eAUG;AAAI,QAAA,EAAE,EAAC,YAAP;AAAoB,QAAA,SAAS,EAAC,aAA9B;AAA4C,QAAA,QAAQ,EAAEC,gBAAtD;AAAA,+BACI,QAAC,UAAD;AACI,UAAA,UAAU,EAAEb,IADhB;AAEI,UAAA,YAAY,EAAEC,YAFlB;AAGI,UAAA,eAAe,EAAEM,eAHrB;AAII,UAAA,YAAY,EAAEP,IAAI,CAACS,cAAL,CAAoBF,eAApB;AAJlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVH,eAkBG;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA5CD;;GAAMR,gB;UAC0BD,e;;;KAD1BC,gB;AA8CN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport UnitSelect from \"../UnitSelect\";\nimport { useStoreContext, GlobalSystems, GlobalUnits, KeyOfIngredient } from \"../../utils/GlobalState\";\nimport { Ingredient, UnitInterface } from \"../ViewEditRecipe/Ingredient\";\nimport './index.css';\n\ninterface RenderIngredientInterface {\n    data: Ingredient,\n    currentUnits: UnitInterface[],\n    index: number;\n}\n\nconst RenderIngredient = ({ data , currentUnits, index }: RenderIngredientInterface) => {\n    const [ state, dispatch ] = useStoreContext();\n\n    const globalSystem: GlobalSystems = state.globalSystem;\n    const globalUnit: GlobalUnits = state.globalUnit;\n\n    //this is the state as a key of Ingredient object\n    const keyOfIngredient: KeyOfIngredient = `${globalSystem}_${globalUnit}`;\n\n    const thisUnit = data.returnSelected(keyOfIngredient).unit;\n    const thisValue = data.returnSelected(keyOfIngredient).value;\n\n    const handleChangeUnit = (event: React.FormEvent): void => {\n        const { value } = event.target as HTMLFormElement;\n\n        data.updateSelected(keyOfIngredient, value);\n    }\n    \n    return(\n        <tbody>\n             <tr>\n                <td className=\"ingredient-name\">{data.name}</td>\n                <td className=\"ingredient-measurement\">\n                    {  data.returnSelected(keyOfIngredient).value\n                        ? (<div>{data.returnSelected(keyOfIngredient).value}</div>)\n                        : (<form>\n                            <input type=\"text\" placeholder=\"No Amt.\"/>\n                        </form>)\n                    }        \n                </td>\n                <td id='unitSelect' className=\"unit-select\" onChange={handleChangeUnit}>\n                    <UnitSelect \n                        ingredient={data}\n                        currentUnits={currentUnits}\n                        keyOfIngredient={keyOfIngredient}\n                        selectedUnit={data.returnSelected(keyOfIngredient)}\n                    />\n                </td>\n                <td>\n                    <input type=\"number\"></input>\n                </td>\n            </tr> \n        </tbody>\n    )\n}\n\nexport default RenderIngredient;"]},"metadata":{},"sourceType":"module"}