{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/client/src/components/ToggleGlobals/index.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Row, Form, Stack } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleGlobals = observer(_c = _ref => {\n  let {\n    recipe\n  } = _ref;\n  const system = recipe.system;\n  const units = recipe.units;\n\n  const handleChange = event => {\n    const {\n      value,\n      id\n    } = event.target;\n    if (id === 'system') recipe.changeState(value, units);\n    if (id === 'units') recipe.changeState(system, value);\n    if (id === 'multiplier') recipe.updateMultiplier(value);\n    if (id === 'yield') recipe.recipeYield = value;\n  }; //returns an array of numbers 1 through n\n\n\n  const oneThrough = max => {\n    const arr = [];\n\n    for (let i = 1; i < max; i++) {\n      arr.push(i);\n    }\n\n    return arr;\n  };\n\n  const options = x => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: x,\n      children: x\n    }, x, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    as: Row,\n    className: \"toggle-measure\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n        id: \"system\",\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"metric\",\n          children: \"METRIC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"us\",\n          children: \"US\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        id: \"units\",\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"weight\",\n          children: \"WEIGHT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"volume\",\n          children: \"VOLUME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Yields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"number\",\n        id: \"yield\",\n        value: recipe.recipeYield,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), recipe.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Multiplier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        id: \"multiplier\",\n        defaultValue: recipe.multiplier,\n        disabled: recipe.ingredients.length < 1,\n        onChange: handleChange,\n        children: oneThrough(100).map(num => options(num))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n});\n_c2 = ToggleGlobals;\nexport default ToggleGlobals;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToggleGlobals$observer\");\n$RefreshReg$(_c2, \"ToggleGlobals\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/client/src/components/ToggleGlobals/index.tsx"],"names":["React","observer","Row","Form","Stack","ToggleGlobals","recipe","system","units","handleChange","event","value","id","target","changeState","updateMultiplier","recipeYield","oneThrough","max","arr","i","push","options","x","name","multiplier","ingredients","length","map","num"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Row, Form, Stack } from 'react-bootstrap';\n\nimport { Recipe } from '../Recipe/Recipe';\n\ninterface IToggleGlobals {\n    recipe: Recipe;\n}\n\nconst ToggleGlobals = observer(({ recipe }: IToggleGlobals) => {\n\n    const system = recipe.system;\n    const units = recipe.units;\n\n    const handleChange = (event: React.FormEvent): void =>  {\n        const { value, id } = event.target as HTMLFormElement;\n\n        if (id === 'system') recipe.changeState( value, units );\n\n        if (id === 'units') recipe.changeState( system, value );\n\n        if (id === 'multiplier') recipe.updateMultiplier(value);\n\n        if (id === 'yield') recipe.recipeYield = value;\n    } \n\n    //returns an array of numbers 1 through n\n    const oneThrough = (max: number) => {\n        const arr = [];\n\n        for (let i = 1; i < max; i++) {\n            arr.push(i);\n        }\n\n        return arr;\n    }\n\n    const options = (x: number | string): JSX.Element => {\n        return (\n            <option key={x} value={x}>{x}</option>\n        );\n    }\n\n    return (\n        <Form as={Row} className='toggle-measure'> \n            <Form.Group>\n\n                {/* SYSTEM */}\n                <Form.Select id='system' onChange={handleChange}>\n                    <option value=\"metric\">METRIC</option>\n                    <option value=\"us\">US</option>\n                </Form.Select>\n\n                {/* UNITS */}\n                <Form.Select id='units' onChange={handleChange}>\n                        <option value=\"weight\">WEIGHT</option>\n                        <option value=\"volume\">VOLUME</option>\n                </Form.Select>\n\n            </Form.Group>\n\n            <Stack direction='horizontal'>\n                <p>\n                    Yields\n                </p>\n\n                <Form.Control \n                    type='number'\n                    id='yield'\n                    value={recipe.recipeYield}\n                    onChange={handleChange}\n                />\n\n                {recipe.name && \n                    <div>{recipe.name}</div>\n                }\n            </Stack>\n\n            <Stack direction='horizontal'>\n                <p>\n                    Multiplier\n                </p>\n                \n                {/* MULTIPLIER */}\n                <Form.Select\n                    id='multiplier' \n                    defaultValue={recipe.multiplier} \n                    disabled={recipe.ingredients.length < 1}\n                    onChange={handleChange}\n                >\n                    {oneThrough(100).map(num => options(num))}\n                </Form.Select>\n            </Stack>\n        </Form>\n    )\n});\n\nexport default ToggleGlobals;"]},"metadata":{},"sourceType":"module"}