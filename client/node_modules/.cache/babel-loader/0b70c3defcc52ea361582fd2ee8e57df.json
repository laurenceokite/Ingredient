{"ast":null,"code":"export class Ingredient {\n  constructor(data) {\n    this.name = data.name;\n    this.weight = {\n      value: false,\n      default: false\n    };\n    this.volume = {\n      value: false,\n      default: false\n    };\n    Object.assign(this, data);\n  }\n\n  default(state) {\n    return this.convert(this[state].default);\n  }\n\n  convert(unit) {\n    switch (unit) {\n      case 'grams':\n        return this.weight.value / 1;\n\n      case 'milligrams':\n        return this.weight.value / .001;\n\n      case 'kilograms':\n        return this.weight.value / 1000;\n\n      case 'ounces':\n        return this.weight.value / 28;\n\n      case 'pounds':\n        return this.weight.value / 454;\n\n      case 'milliliters':\n        return this.volume.value / 1;\n\n      case 'liters':\n        return this.volume.value / 1000;\n\n      case 'cups':\n        return this.volume.value / 240;\n\n      case 'quarts':\n        return this.volume.value / 946;\n\n      case 'gallons':\n        return this.volume.value / 3785;\n\n      case 'teaspoons':\n        return this.volume.value / 29.575;\n\n      case 'tablespoons':\n        return this.volume.value / 14.787;\n\n      case 'fluidOunces':\n        return this.volume.value / 4.929;\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/src/utils/Ingredient.js"],"names":["Ingredient","constructor","data","name","weight","value","default","volume","Object","assign","state","convert","unit"],"mappings":"AAAA,OAAO,MAAMA,UAAN,CAAiB;AACpBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKC,IAAL,GAAYD,IAAI,CAACC,IAAjB;AACA,SAAKC,MAAL,GAAc;AACVC,MAAAA,KAAK,EAAE,KADG;AAEVC,MAAAA,OAAO,EAAE;AAFC,KAAd;AAIA,SAAKC,MAAL,GAAc;AACVF,MAAAA,KAAK,EAAE,KADG;AAEVC,MAAAA,OAAO,EAAE;AAFC,KAAd;AAIAE,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBP,IAApB;AACH;;AAEDI,EAAAA,OAAO,CAACI,KAAD,EAAQ;AACX,WAAO,KAAKC,OAAL,CAAa,KAAKD,KAAL,EAAYJ,OAAzB,CAAP;AACH;;AAEDK,EAAAA,OAAO,CAACC,IAAD,EAAO;AACV,YAAQA,IAAR;AACI,WAAK,OAAL;AACI,eAAO,KAAKR,MAAL,CAAYC,KAAZ,GAAoB,CAA3B;;AACJ,WAAK,YAAL;AACI,eAAO,KAAKD,MAAL,CAAYC,KAAZ,GAAoB,IAA3B;;AACJ,WAAK,WAAL;AACI,eAAO,KAAKD,MAAL,CAAYC,KAAZ,GAAoB,IAA3B;;AAEJ,WAAK,QAAL;AACI,eAAO,KAAKD,MAAL,CAAYC,KAAZ,GAAoB,EAA3B;;AACJ,WAAK,QAAL;AACI,eAAO,KAAKD,MAAL,CAAYC,KAAZ,GAAoB,GAA3B;;AAEJ,WAAK,aAAL;AACI,eAAO,KAAKE,MAAL,CAAYF,KAAZ,GAAoB,CAA3B;;AACJ,WAAK,QAAL;AACI,eAAO,KAAKE,MAAL,CAAYF,KAAZ,GAAoB,IAA3B;;AAEJ,WAAK,MAAL;AACI,eAAO,KAAKE,MAAL,CAAYF,KAAZ,GAAoB,GAA3B;;AACJ,WAAK,QAAL;AACI,eAAO,KAAKE,MAAL,CAAYF,KAAZ,GAAoB,GAA3B;;AACJ,WAAK,SAAL;AACI,eAAO,KAAKE,MAAL,CAAYF,KAAZ,GAAoB,IAA3B;;AACJ,WAAK,WAAL;AACI,eAAO,KAAKE,MAAL,CAAYF,KAAZ,GAAoB,MAA3B;;AACJ,WAAK,aAAL;AACI,eAAO,KAAKE,MAAL,CAAYF,KAAZ,GAAoB,MAA3B;;AACJ,WAAK,aAAL;AACI,eAAO,KAAKE,MAAL,CAAYF,KAAZ,GAAoB,KAA3B;AA7BR;AA+BH;;AAlDmB","sourcesContent":["export class Ingredient {\n    constructor(data) {\n        this.name = data.name;\n        this.weight = {\n            value: false,\n            default: false\n        }\n        this.volume = {\n            value: false,\n            default: false\n        }\n        Object.assign(this, data);\n    }\n\n    default(state) {\n        return this.convert(this[state].default);\n    }\n\n    convert(unit) {\n        switch (unit) {\n            case 'grams': \n                return this.weight.value / 1;\n            case 'milligrams':\n                return this.weight.value / .001;\n            case 'kilograms':\n                return this.weight.value / 1000;\n\n            case 'ounces':\n                return this.weight.value / 28;\n            case 'pounds':\n                return this.weight.value / 454;\n\n            case 'milliliters':\n                return this.volume.value / 1;\n            case 'liters':\n                return this.volume.value / 1000;\n\n            case 'cups':\n                return this.volume.value / 240;\n            case 'quarts':\n                return this.volume.value / 946;\n            case 'gallons':\n                return this.volume.value / 3785;\n            case 'teaspoons':\n                return this.volume.value / 29.575;\n            case 'tablespoons':\n                return this.volume.value / 14.787;\n            case 'fluidOunces':\n                return this.volume.value / 4.929;\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}