{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/src/utils/GlobalState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext } from \"react\";\nimport { useIngredientReducer } from './reducers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreContext = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = StoreContext; //Lifts Global State to StoreProvider El.\n\nconst StoreProvider = _ref => {\n  _s();\n\n  let {\n    value = [],\n    ...props\n  } = _ref;\n  // Set default state here.\n  const [state, dispatch] = useIngredientReducer({\n    globalUnit: 'weight',\n    globalSystem: 'metric',\n    autoConvert: false,\n    recipeState: {\n      name: '',\n      ingredients: [],\n      percent: 1\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: [state, dispatch],\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StoreProvider, \"OclAnla6wH0XGrj2okrqc/DLg58=\", false, function () {\n  return [useIngredientReducer];\n});\n\n_c = StoreProvider;\n\nconst useStoreContext = () => {\n  _s2();\n\n  return useContext(StoreContext);\n};\n\n_s2(useStoreContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { StoreProvider, useStoreContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/src/utils/GlobalState.js"],"names":["React","createContext","useContext","useIngredientReducer","StoreContext","Provider","StoreProvider","value","props","state","dispatch","globalUnit","globalSystem","autoConvert","recipeState","name","ingredients","percent","useStoreContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,oBAAT,QAAqC,YAArC;;AAEA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAeD,YAArB,C,CAEA;;AACA,MAAME,aAAa,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,KAAK,GAAG,EAAV;AAAc,OAAGC;AAAjB,GAA6B;AACnD;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,oBAAoB,CAAC;AAC9CQ,IAAAA,UAAU,EAAE,QADkC;AAExCC,IAAAA,YAAY,EAAE,QAF0B;AAGxCC,IAAAA,WAAW,EAAE,KAH2B;AAI9CC,IAAAA,WAAW,EAAE;AACZC,MAAAA,IAAI,EAAE,EADM;AAEZC,MAAAA,WAAW,EAAE,EAFD;AAGZC,MAAAA,OAAO,EAAE;AAHG;AAJiC,GAAD,CAA9C;AAUA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACR,KAAD,EAAQC,QAAR,CAAjB;AAAA,OAAwCF;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAbD;;GAAMF,a;UAEqBH,oB;;;KAFrBG,a;;AAeN,MAAMY,eAAe,GAAG,MAAM;AAAA;;AAC7B,SAAOhB,UAAU,CAACE,YAAD,CAAjB;AACA,CAFD;;IAAMc,e;;AAIN,SAASZ,aAAT,EAAwBY,eAAxB","sourcesContent":["import React, { createContext, useContext } from \"react\";\nimport { useIngredientReducer } from './reducers';\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\n//Lifts Global State to StoreProvider El.\nconst StoreProvider = ({ value = [], ...props }) => {\n\t// Set default state here.\n\tconst [state, dispatch] = useIngredientReducer({\n\t\tglobalUnit: 'weight',\n        globalSystem: 'metric',\n        autoConvert: false,\n\t\trecipeState: { \n\t\t\tname: '', \n\t\t\tingredients: [],\n\t\t\tpercent: 1\n\t\t}\n\t  });\n\treturn <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n\treturn useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };"]},"metadata":{},"sourceType":"module"}