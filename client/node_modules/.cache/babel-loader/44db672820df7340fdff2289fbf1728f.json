{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.tsx\";\nimport React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport UnitSelect from \"../UnitSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderIngredient = observer(_c = _ref => {\n  let {\n    ingredient,\n    recipe\n  } = _ref;\n  const thisUnit = ingredient.returnSelected(recipe.state).unit;\n  console.log(ingredient.bakersPercentage); //update ingredient unit\n\n  const handleChangeUnit = event => {\n    const {\n      value\n    } = event.target;\n    ingredient.updateSelected(recipe.state, value);\n  }; //update ingredient value\n\n\n  const handleChangeValue = event => {\n    const {\n      value\n    } = event.target;\n    ingredient.updateValue(recipe.state, thisUnit, value);\n    recipe.getBakersPercents();\n    console.log(ingredient, recipe);\n  }; //update bakers percent\n\n\n  const handleChangePercent = event => {};\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"ingredient-name\",\n        children: ingredient.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 9,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"No Amt.\",\n                value: ingredient.returnSelected(recipe.state).value ? //if there is a value\n                ingredient.returnSelected(recipe.state).value : //display that value\n                '' //else don't\n                ,\n                onChange: handleChangeValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onChange: handleChangeUnit,\n              children: /*#__PURE__*/_jsxDEV(UnitSelect, {\n                recipe: recipe,\n                ingredient: ingredient\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          value: ingredient.bakersPercentage,\n          onChange: handleChangePercent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n});\n_c2 = RenderIngredient;\nexport default RenderIngredient;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderIngredient$observer\");\n$RefreshReg$(_c2, \"RenderIngredient\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.tsx"],"names":["React","observer","Form","Row","Col","UnitSelect","RenderIngredient","ingredient","recipe","thisUnit","returnSelected","state","unit","console","log","bakersPercentage","handleChangeUnit","event","value","target","updateSelected","handleChangeValue","updateValue","getBakersPercents","handleChangePercent","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport { trace } from \"mobx\";\nimport UnitSelect from \"../UnitSelect\";\nimport { Ingredient } from \"../Recipe/Ingredient\";\nimport { Recipe } from \"../Recipe/Recipe\";\n\n\ninterface RenderIngredientInterface {\n    ingredient: Ingredient,\n    recipe: Recipe\n}\n\nconst RenderIngredient = observer(({ ingredient, recipe }: RenderIngredientInterface) => {\n\n   \n    const thisUnit = ingredient.returnSelected(recipe.state).unit;\n\n    console.log(ingredient.bakersPercentage);\n\n    //update ingredient unit\n    const handleChangeUnit = (event: React.FormEvent): void => {\n        const { value } = event.target as HTMLFormElement;\n\n        ingredient.updateSelected(recipe.state, value);\n    }\n\n    //update ingredient value\n    const handleChangeValue = (event: React.FormEvent): void => {\n        const { value } = event.target as HTMLFormElement;\n\n        ingredient.updateValue(recipe.state, thisUnit, value);\n        recipe.getBakersPercents();\n        console.log(ingredient, recipe);\n    }\n\n    //update bakers percent\n    const handleChangePercent = (event: React.FormEvent): void => {\n\n    } \n    \n    return(\n        <tr>\n            <Row>\n                <td className=\"ingredient-name\">{ingredient.name}</td>\n            </Row>\n            <Row>\n                <Col xs={9}>\n\n                    <Row>\n\n                        {/* render ingredient value */}\n                        <Col xs={8}>\n                            <Form>\n                                <Form.Control \n                                    type=\"text\" \n                                    placeholder=\"No Amt.\" \n                                    value={\n                                        ingredient.returnSelected(recipe.state).value ? //if there is a value\n                                        ingredient.returnSelected(recipe.state).value : //display that value\n                                        '' //else don't\n                                    } \n                                    onChange={handleChangeValue}\n                                />\n                            </Form>\n                        </Col>\n\n                        {/* render UnitSelect */}\n                        <Col>\n                            <div onChange={handleChangeUnit}>\n                                <UnitSelect \n                                    recipe={recipe}\n                                    ingredient={ingredient}\n                                />\n                            </div>\n                        </Col>\n\n                    </Row>\n\n                </Col>\n\n                {/* percentage */}\n                <Col>\n                    <Form.Control type=\"number\" value={ingredient.bakersPercentage} onChange={handleChangePercent}/>\n                </Col>\n\n            </Row>\n        </tr> \n    )\n})\n\nexport default RenderIngredient;"]},"metadata":{},"sourceType":"module"}