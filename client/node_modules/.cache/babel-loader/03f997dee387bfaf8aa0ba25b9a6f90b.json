{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.tsx\";\nimport React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport UnitSelect from \"../UnitSelect\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderIngredient = observer(_c = _ref => {\n  let {\n    ingredient,\n    recipe\n  } = _ref;\n  console.log(recipe);\n  const thisUnit = ingredient.returnSelected(recipe.state).unit;\n  const thisValue = ingredient.returnSelected(recipe.state).value;\n\n  const handleChangeUnit = event => {\n    const {\n      value\n    } = event.target;\n    ingredient.updateSelected(recipe.state, value);\n  };\n\n  const handleChangeValue = event => {\n    const {\n      value\n    } = event.target;\n    ingredient.updateValue(recipe.state, thisUnit, value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"ingredient-name\",\n        children: ingredient.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"ingredient-measurement\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"No Amt.\",\n            value: thisValue ? thisValue : '',\n            onChange: handleChangeValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        id: \"unitSelect\",\n        className: \"unit-select\",\n        onChange: handleChangeUnit,\n        children: /*#__PURE__*/_jsxDEV(UnitSelect, {\n          ingredient: ingredient,\n          currentUnits: recipe.data.returnCurrentUnits(recipe.state),\n          state: recipe.state,\n          selectedUnit: ingredient.returnSelected(recipe.state)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n});\n_c2 = RenderIngredient;\nexport default RenderIngredient;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderIngredient$observer\");\n$RefreshReg$(_c2, \"RenderIngredient\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.tsx"],"names":["React","observer","UnitSelect","Form","RenderIngredient","ingredient","recipe","console","log","thisUnit","returnSelected","state","unit","thisValue","value","handleChangeUnit","event","target","updateSelected","handleChangeValue","updateValue","name","data","returnCurrentUnits"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AAGA,SAASC,IAAT,QAAqB,iBAArB;;AAOA,MAAMC,gBAAgB,GAAGH,QAAQ,MAAC,QAAuD;AAAA,MAAtD;AAAEI,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAsD;AAErFC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,QAAMG,QAAQ,GAAGJ,UAAU,CAACK,cAAX,CAA0BJ,MAAM,CAACK,KAAjC,EAAwCC,IAAzD;AACA,QAAMC,SAAS,GAAGR,UAAU,CAACK,cAAX,CAA0BJ,MAAM,CAACK,KAAjC,EAAwCG,KAA1D;;AAEA,QAAMC,gBAAgB,GAAIC,KAAD,IAAkC;AACvD,UAAM;AAAEF,MAAAA;AAAF,QAAYE,KAAK,CAACC,MAAxB;AAEAZ,IAAAA,UAAU,CAACa,cAAX,CAA0BZ,MAAM,CAACK,KAAjC,EAAwCG,KAAxC;AACH,GAJD;;AAMA,QAAMK,iBAAiB,GAAIH,KAAD,IAAkC;AACxD,UAAM;AAAEF,MAAAA;AAAF,QAAYE,KAAK,CAACC,MAAxB;AAEAZ,IAAAA,UAAU,CAACe,WAAX,CAAuBd,MAAM,CAACK,KAA9B,EAAqCF,QAArC,EAA+CK,KAA/C;AACH,GAJD;;AAMA,sBACI;AAAA,2BACK;AAAA,8BACG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBAAiCT,UAAU,CAACgB;AAA5C;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA,+BACI,QAAC,IAAD;AAAA,iCACI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,WAAW,EAAC,SAFhB;AAGI,YAAA,KAAK,EAAER,SAAS,GAAGA,SAAH,GAAe,EAHnC;AAII,YAAA,QAAQ,EAAEM;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFH,eAYG;AAAI,QAAA,EAAE,EAAC,YAAP;AAAoB,QAAA,SAAS,EAAC,aAA9B;AAA4C,QAAA,QAAQ,EAAEJ,gBAAtD;AAAA,+BACI,QAAC,UAAD;AACI,UAAA,UAAU,EAAEV,UADhB;AAEI,UAAA,YAAY,EAAEC,MAAM,CAACgB,IAAP,CAAYC,kBAAZ,CAA+BjB,MAAM,CAACK,KAAtC,CAFlB;AAGI,UAAA,KAAK,EAAEL,MAAM,CAACK,KAHlB;AAII,UAAA,YAAY,EAAEN,UAAU,CAACK,cAAX,CAA0BJ,MAAM,CAACK,KAAjC;AAJlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZH,eAoBG;AAAA,+BACI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CA/CgC,CAAjC;MAAMP,gB;AAiDN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\n\nimport UnitSelect from \"../UnitSelect\";\nimport { Ingredient } from \"../Recipe/Ingredient\";\nimport { Recipe } from \"../Recipe/Recipe\";\nimport { Form } from \"react-bootstrap\";\n\ninterface RenderIngredientInterface {\n    ingredient: Ingredient,\n    recipe: Recipe\n}\n\nconst RenderIngredient = observer(({ ingredient, recipe }: RenderIngredientInterface) => {\n\n    console.log(recipe);\n    \n    const thisUnit = ingredient.returnSelected(recipe.state).unit;\n    const thisValue = ingredient.returnSelected(recipe.state).value;\n\n    const handleChangeUnit = (event: React.FormEvent): void => {\n        const { value } = event.target as HTMLFormElement;\n\n        ingredient.updateSelected(recipe.state, value);\n    }\n\n    const handleChangeValue = (event: React.FormEvent): void => {\n        const { value } = event.target as HTMLFormElement;\n\n        ingredient.updateValue(recipe.state, thisUnit, value);\n    }\n    \n    return(\n        <tbody>\n             <tr>\n                <td className=\"ingredient-name\">{ingredient.name}</td>\n                <td className=\"ingredient-measurement\">\n                    <Form>\n                        <Form.Control \n                            type=\"text\" \n                            placeholder=\"No Amt.\" \n                            value={thisValue ? thisValue : ''} \n                            onChange={handleChangeValue}\n                        />\n                    </Form>\n                </td>\n                <td id='unitSelect' className=\"unit-select\" onChange={handleChangeUnit}>\n                    <UnitSelect \n                        ingredient={ingredient}\n                        currentUnits={recipe.data.returnCurrentUnits(recipe.state)}\n                        state={recipe.state}\n                        selectedUnit={ingredient.returnSelected(recipe.state)}\n                    />\n                </td>\n                <td>\n                    <Form.Control type=\"number\"></Form.Control>\n                </td>\n            </tr> \n        </tbody>\n    )\n})\n\nexport default RenderIngredient;"]},"metadata":{},"sourceType":"module"}