{"ast":null,"code":"import { relativeValues } from \"./relativeValues\";\nexport class Ingredient {\n  constructor(data, system, unit) {\n    this.name = name;\n    this.system = system;\n    this.unit = unit;\n    this.weight = {\n      value: false,\n      default: false\n    };\n    this.volume = {\n      value: false,\n      default: false\n    };\n    Object.assign(this, data);\n  }\n\n  default() {\n    return this.convert(this[this.unit].default);\n  }\n\n  convert(unit) {\n    const relativeValue = relativeValues[this.system][this.unit][unit].value;\n    return this[this.unit].value / relativeValue;\n  }\n\n}","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/src/components/RenderIngredient/Ingredient.js"],"names":["relativeValues","Ingredient","constructor","data","system","unit","name","weight","value","default","volume","Object","assign","convert","relativeValue"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AAEA,OAAO,MAAMC,UAAN,CAAiB;AACpBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAeC,IAAf,EAAqB;AAC5B,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKE,MAAL,GAAc;AACVC,MAAAA,KAAK,EAAE,KADG;AAEVC,MAAAA,OAAO,EAAE;AAFC,KAAd;AAIA,SAAKC,MAAL,GAAc;AACVF,MAAAA,KAAK,EAAE,KADG;AAEVC,MAAAA,OAAO,EAAE;AAFC,KAAd;AAIAE,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBT,IAApB;AACH;;AAEDM,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKI,OAAL,CAAa,KAAK,KAAKR,IAAV,EAAgBI,OAA7B,CAAP;AACH;;AAEDI,EAAAA,OAAO,CAACR,IAAD,EAAO;AACV,UAAMS,aAAa,GAAGd,cAAc,CAAC,KAAKI,MAAN,CAAd,CAA4B,KAAKC,IAAjC,EAAuCA,IAAvC,EAA6CG,KAAnE;AACA,WAAO,KAAK,KAAKH,IAAV,EAAgBG,KAAhB,GAAwBM,aAA/B;AACH;;AAvBmB","sourcesContent":["import { relativeValues } from \"./relativeValues\";\n\nexport class Ingredient {\n    constructor(data, system, unit) {\n        this.name = name;\n        this.system = system;\n        this.unit = unit;\n        this.weight = {\n            value: false,\n            default: false\n        }\n        this.volume = {\n            value: false,\n            default: false\n        }\n        Object.assign(this, data);\n    }\n\n    default() {\n        return this.convert(this[this.unit].default);\n    }\n\n    convert(unit) {\n        const relativeValue = relativeValues[this.system][this.unit][unit].value;\n        return this[this.unit].value / relativeValue;\n    }\n}"]},"metadata":{},"sourceType":"module"}