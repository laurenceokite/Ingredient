{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/client/src/components/ToggleGlobals/index.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Stack, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleGlobals = observer(_c = _ref => {\n  let {\n    recipe\n  } = _ref;\n  const system = recipe.system;\n  const units = recipe.units;\n\n  const handleChange = event => {\n    const {\n      value,\n      id\n    } = event.target;\n    console.log(id, recipe);\n    if (id === 'system') recipe.changeState(value, units);\n    if (id === 'units') recipe.changeState(system, value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"toggle-measure\",\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      horizontal: true,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n          id: \"system\",\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"metric\",\n            children: \"M\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"us\",\n            children: \"US\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          id: \"units\",\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"weight\",\n            children: \"WEIGHT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"volume\",\n            children: \"VOLUME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-percent\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \" X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n});\n_c2 = ToggleGlobals;\nexport default ToggleGlobals;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToggleGlobals$observer\");\n$RefreshReg$(_c2, \"ToggleGlobals\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/client/src/components/ToggleGlobals/index.tsx"],"names":["React","observer","Stack","Form","ToggleGlobals","recipe","system","units","handleChange","event","value","id","target","console","log","changeState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,iBAA5B;;AAQA,MAAMC,aAAa,GAAGH,QAAQ,MAAC,QAAgC;AAAA,MAA/B;AAAEI,IAAAA;AAAF,GAA+B;AAE3D,QAAMC,MAAM,GAAGD,MAAM,CAACC,MAAtB;AACA,QAAMC,KAAK,GAAGF,MAAM,CAACE,KAArB;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAmC;AACpD,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAgBF,KAAK,CAACG,MAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAgBN,MAAhB;AAEA,QAAIM,EAAE,KAAK,QAAX,EAAqBN,MAAM,CAACU,WAAP,CAAoBL,KAApB,EAA2BH,KAA3B;AAErB,QAAII,EAAE,KAAK,OAAX,EAAoBN,MAAM,CAACU,WAAP,CAAoBT,MAApB,EAA4BI,KAA5B;AACvB,GAPD;;AASA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA,2BAEI,QAAC,KAAD;AAAO,MAAA,UAAU,MAAjB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gCAEI,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,EAAE,EAAC,QAAhB;AAAyB,UAAA,QAAQ,EAAEF,YAAnC;AAAA,kCACI;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOI,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,EAAE,EAAC,OAAhB;AAAwB,UAAA,QAAQ,EAAEA,YAAlC;AAAA,kCACQ;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR,eAEQ;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,QAAnB;AAA4B,UAAA,WAAW,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CArC6B,CAA9B;MAAMJ,a;AAuCN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Stack, Form } from 'react-bootstrap';\n\nimport { Recipe } from '../Recipe/Recipe';\n\ninterface IToggleGlobals {\n    recipe: Recipe;\n}\n\nconst ToggleGlobals = observer(({ recipe }: IToggleGlobals) => {\n\n    const system = recipe.system;\n    const units = recipe.units;\n\n    const handleChange = (event: React.FormEvent): void =>  {\n        const { value, id } = event.target as HTMLFormElement;\n        console.log(id, recipe);\n\n        if (id === 'system') recipe.changeState( value, units );\n\n        if (id === 'units') recipe.changeState( system, value );\n    }\n\n    return (\n        <Form className='toggle-measure'> \n            {/* Measurement Options */}\n            <Stack horizontal>\n                <Form.Group>\n                    {/* system */}\n                    <Form.Select id='system' onChange={handleChange}>\n                        <option value=\"metric\">M</option>\n                        <option value=\"us\">US</option>\n                    </Form.Select>\n                    {/* type */}\n                    <Form.Select id='units' onChange={handleChange}>\n                            <option value=\"weight\">WEIGHT</option>\n                            <option value=\"volume\">VOLUME</option>\n                    </Form.Select>\n                </Form.Group>\n                <div className='edit-percent'>\n                    <Form.Control type='number' placeholder='100'></Form.Control>\n                    <a> X</a>\n                </div>\n                </Stack>\n        </Form>\n    )\n});\n\nexport default ToggleGlobals;"]},"metadata":{},"sourceType":"module"}