{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/src/components/RenderIngredient/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderIngredient(_ref) {\n  _s();\n\n  let {\n    name,\n    amount\n  } = _ref;\n  const [state, dispatch] = useStoreContext();\n  const measure = `${state.measureType}-${state.measureSystem}`;\n  const currentAmount = amount[measure];\n  console.log(currentAmount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RenderIngredient, \"AaULK2aEGk5riJKW01t0FPXyxro=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = RenderIngredient;\nexport default RenderIngredient;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderIngredient\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/src/components/RenderIngredient/index.js"],"names":["React","useState","useStoreContext","RenderIngredient","name","amount","state","dispatch","measure","measureType","measureSystem","currentAmount","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,yBAAhC;;;AAEA,SAASC,gBAAT,OAA4C;AAAA;;AAAA,MAAlB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAkB;AACxC,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBL,eAAe,EAA3C;AAEA,QAAMM,OAAO,GAAI,GAAEF,KAAK,CAACG,WAAY,IAAGH,KAAK,CAACI,aAAc,EAA5D;AACA,QAAMC,aAAa,GAAGN,MAAM,CAACG,OAAD,CAA5B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AAEA,sBACI;AAAA,4BACI;AAAA,gBAAMP;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAbQD,gB;UACuBD,e;;;KADvBC,gB;AAeT,eAAeA,gBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\n\nfunction RenderIngredient({ name, amount }) {\n    const [ state, dispatch ] = useStoreContext();\n\n    const measure = `${state.measureType}-${state.measureSystem}`;\n    const currentAmount = amount[measure];\n    console.log(currentAmount);\n\n    return(\n        <div>\n            <div>{name}</div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default RenderIngredient;"]},"metadata":{},"sourceType":"module"}