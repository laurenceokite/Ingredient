{"ast":null,"code":"export class Ingredient {\n  constructor(measurement) {\n    this.weight = {\n      value: false,\n      default: false\n    };\n    this.volume = {\n      value: false,\n      default: false\n    };\n\n    this.milligrams = function () {\n      return 'sucess';\n    };\n\n    Object.assign(this, measurement);\n  }\n\n  default(request) {\n    const funct = [request].default;\n    return this.funct;\n  }\n\n  grams() {}\n\n  milligrams() {\n    return 'sucess';\n  }\n\n  kilograms() {}\n\n  milliliters() {}\n\n  liters() {}\n\n  ounces() {}\n\n  pounds() {}\n\n  cups() {}\n\n  quarts() {}\n\n  gallons() {}\n\n  teaspoons() {}\n\n  tablespoons() {}\n\n  fluidOunces() {}\n\n}","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/src/utils/Ingredient.js"],"names":["Ingredient","constructor","measurement","weight","value","default","volume","milligrams","Object","assign","request","funct","grams","kilograms","milliliters","liters","ounces","pounds","cups","quarts","gallons","teaspoons","tablespoons","fluidOunces"],"mappings":"AAAA,OAAO,MAAMA,UAAN,CAAiB;AACpBC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACrB,SAAKC,MAAL,GAAc;AACVC,MAAAA,KAAK,EAAE,KADG;AAEVC,MAAAA,OAAO,EAAE;AAFC,KAAd;AAIA,SAAKC,MAAL,GAAc;AACVF,MAAAA,KAAK,EAAE,KADG;AAEVC,MAAAA,OAAO,EAAE;AAFC,KAAd;;AAKA,SAAKE,UAAL,GAAkB,YAAW;AACzB,aAAO,QAAP;AACH,KAFD;;AAGAC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBP,WAApB;AACH;;AAEDG,EAAAA,OAAO,CAACK,OAAD,EAAU;AACb,UAAMC,KAAK,GAAG,CAACD,OAAD,EAAUL,OAAxB;AACA,WAAO,KAAKM,KAAZ;AACH;;AAEDC,EAAAA,KAAK,GAAG,CAAE;;AACVL,EAAAA,UAAU,GAAG;AACT,WAAO,QAAP;AACH;;AACDM,EAAAA,SAAS,GAAG,CAAE;;AAEdC,EAAAA,WAAW,GAAG,CAAE;;AAChBC,EAAAA,MAAM,GAAG,CAAE;;AAEXC,EAAAA,MAAM,GAAG,CAAE;;AACXC,EAAAA,MAAM,GAAG,CAAE;;AAEXC,EAAAA,IAAI,GAAG,CAAE;;AACTC,EAAAA,MAAM,GAAG,CAAE;;AACXC,EAAAA,OAAO,GAAG,CAAE;;AACZC,EAAAA,SAAS,GAAG,CAAE;;AACdC,EAAAA,WAAW,GAAG,CAAE;;AAChBC,EAAAA,WAAW,GAAG,CAAE;;AAvCI","sourcesContent":["export class Ingredient {\n    constructor(measurement) {\n        this.weight = {\n            value: false,\n            default: false\n        }\n        this.volume = {\n            value: false,\n            default: false\n        }\n\n        this.milligrams = function() {\n            return 'sucess'\n        }\n        Object.assign(this, measurement);\n    }\n\n    default(request) {\n        const funct = [request].default\n        return this.funct;\n    };\n\n    grams() {};\n    milligrams() {\n        return 'sucess'\n    };\n    kilograms() {};\n\n    milliliters() {};\n    liters() {};\n\n    ounces() {};\n    pounds() {};\n\n    cups() {};\n    quarts() {};\n    gallons() {};\n    teaspoons() {};\n    tablespoons() {};\n    fluidOunces() {};\n}"]},"metadata":{},"sourceType":"module"}