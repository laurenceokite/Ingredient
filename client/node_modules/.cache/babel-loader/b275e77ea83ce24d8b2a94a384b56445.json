{"ast":null,"code":"export function convertSubMeasure(current, requested, measurement, system) {\n  const log = function () {\n    return console.log(...arguments);\n  };\n\n  const measures = {\n    weight_metric: {\n      grams: 1,\n      milligrams: .001,\n      kilograms: 100\n    },\n    metric_volume: {\n      milliliters: 1,\n      liters: 1000\n    },\n    us_volume: {\n      cups: 240,\n      quarts: 946,\n      gallons: 3785,\n      fluid_ounces: 29.574,\n      tablespoons: 14.787,\n      teaspoon: 4.929\n    }\n  };\n  const newMeasurement = measures[current] / measures[requested] * measurement;\n  return {\n    newMeasurement: newMeasurement,\n    newSubmeasure: requested\n  };\n}\nexport function convertMeasure(current, requested, measurement, submeasure) {\n  const conversion = `${current}->${requested}`;\n\n  switch (conversion) {\n    case 'weight-metric->volume-metric':\n      if (submeasure !== 'grams') {\n        measurement = convertSubMeasure(submeasure, 'grams', measurement);\n      }\n\n      return {\n        newMeasurement: measurement,\n        newSubmeasure: 'milliliters'\n      };\n  }\n}","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/src/utils/helpers.js"],"names":["convertSubMeasure","current","requested","measurement","system","log","console","measures","weight_metric","grams","milligrams","kilograms","metric_volume","milliliters","liters","us_volume","cups","quarts","gallons","fluid_ounces","tablespoons","teaspoon","newMeasurement","newSubmeasure","convertMeasure","submeasure","conversion"],"mappings":"AAAA,OAAO,SAASA,iBAAT,CAA2BC,OAA3B,EAAoCC,SAApC,EAA+CC,WAA/C,EAA4DC,MAA5D,EAAoE;AACvE,QAAMC,GAAG,GAAG;AAAA,WAAaC,OAAO,CAACD,GAAR,CAAY,YAAZ,CAAb;AAAA,GAAZ;;AAEA,QAAME,QAAQ,GAAG;AACbC,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,UAAU,EAAE,IAFD;AAGXC,MAAAA,SAAS,EAAE;AAHA,KADF;AAObC,IAAAA,aAAa,EAAE;AACXC,MAAAA,WAAW,EAAE,CADF;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAPF;AAYbC,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAE,GADC;AAEPC,MAAAA,MAAM,EAAE,GAFD;AAGPC,MAAAA,OAAO,EAAE,IAHF;AAIPC,MAAAA,YAAY,EAAE,MAJP;AAKPC,MAAAA,WAAW,EAAE,MALN;AAMPC,MAAAA,QAAQ,EAAE;AANH;AAZE,GAAjB;AAuBA,QAAMC,cAAc,GAAGf,QAAQ,CAACN,OAAD,CAAR,GAAoBM,QAAQ,CAACL,SAAD,CAA5B,GAA0CC,WAAjE;AAEA,SAAO;AACHmB,IAAAA,cAAc,EAAEA,cADb;AAEHC,IAAAA,aAAa,EAAErB;AAFZ,GAAP;AAKH;AAED,OAAO,SAASsB,cAAT,CAAwBvB,OAAxB,EAAiCC,SAAjC,EAA4CC,WAA5C,EAAyDsB,UAAzD,EAAqE;AACxE,QAAMC,UAAU,GAAI,GAAEzB,OAAQ,KAAIC,SAAU,EAA5C;;AAEA,UAAOwB,UAAP;AACI,SAAK,8BAAL;AACI,UAAID,UAAU,KAAK,OAAnB,EAA4B;AACxBtB,QAAAA,WAAW,GAAGH,iBAAiB,CAACyB,UAAD,EAAa,OAAb,EAAsBtB,WAAtB,CAA/B;AACH;;AACD,aAAO;AACHmB,QAAAA,cAAc,EAAEnB,WADb;AAEHoB,QAAAA,aAAa,EAAE;AAFZ,OAAP;AALR;AAUH","sourcesContent":["export function convertSubMeasure(current, requested, measurement, system) {    \n    const log = (...args) => console.log(...args);\n    \n    const measures = {\n        weight_metric: {\n            grams: 1,\n            milligrams: .001,\n            kilograms: 100\n        },\n\n        metric_volume: {\n            milliliters: 1,\n            liters: 1000\n        },\n\n        us_volume: {\n            cups: 240,\n            quarts: 946,\n            gallons: 3785,\n            fluid_ounces: 29.574,\n            tablespoons: 14.787,\n            teaspoon: 4.929\n        }\n\n    }\n    \n    const newMeasurement = measures[current] / measures[requested] * measurement\n    \n    return { \n        newMeasurement: newMeasurement,\n        newSubmeasure: requested\n    }\n    \n}\n\nexport function convertMeasure(current, requested, measurement, submeasure) {\n    const conversion = `${current}->${requested}`;\n\n    switch(conversion) {\n        case 'weight-metric->volume-metric':\n            if (submeasure !== 'grams') {\n                measurement = convertSubMeasure(submeasure, 'grams', measurement);\n            }\n            return {\n                newMeasurement: measurement,\n                newSubmeasure: 'milliliters'\n            }\n    }\n}"]},"metadata":{},"sourceType":"module"}