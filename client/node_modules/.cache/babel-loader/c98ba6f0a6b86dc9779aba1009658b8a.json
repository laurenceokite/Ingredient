{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderIngredient(_ref) {\n  _s();\n\n  let {\n    data,\n    currentUnits\n  } = _ref;\n  const [state] = useStoreContext();\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RenderIngredient, \"OjKJ3WWoA2ZQTKNXEIIIM9EJwiI=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = RenderIngredient;\nexport default RenderIngredient;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderIngredient\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.js"],"names":["React","useState","useEffect","useStoreContext","RenderIngredient","data","currentUnits","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAO,aAAP;;;AAEA,SAASC,gBAAT,OAAkD;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAwB;AAC9C,QAAM,CAAEC,KAAF,IAAYJ,eAAe,EAAjC;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAjCQC,gB;UACaD,e;;;KADbC,gB;AAmCT,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport './index.css';\n\nfunction RenderIngredient({ data, currentUnits }) {\n    const [ state ] = useStoreContext();\n\n\n    return(\n        <tbody>\n            {/* <tr>\n                <td className=\"ingredient-name\">{ingredient.name}</td>\n                <td className=\"ingredient-measurement\">\n                    {  ingredient.measurement\n                        ? (<div>{ingredient.measurement}</div>)\n                        : (<form>\n                            <input type=\"text\" placeholder=\"No Amt.\"/>\n                        </form>)\n                    }        \n                </td>\n                <td id='unitSelect' className=\"unit-select\">\n                    <select onChange={handleUnitChange} name='unit' value={ingredient.unit}>\n                        {currentUnits.map(thisUnit=> (\n\n                            <option value={thisUnit.unit} key={thisUnit.unit}> \n                            {thisUnit.abbrev} \n                            </option>\n\n                            ))}\n                    </select>\n                </td>\n                <td>\n                    <input type=\"number\"></input>\n                </td>\n            </tr> */}\n        </tbody>\n    )\n}\n\nexport default RenderIngredient;"]},"metadata":{},"sourceType":"module"}