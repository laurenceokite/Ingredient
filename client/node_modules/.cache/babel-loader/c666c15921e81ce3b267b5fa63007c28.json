{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/src/components/ViewEditRecipe/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ToggleMeasure from '../ToggleMeasure';\nimport RenderIngredient from '../RenderIngredient';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { Ingredient } from '../../utils/Ingredient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewEditRecipe() {\n  _s();\n\n  const [state] = useStoreContext();\n  const [formState, setformState] = useState({\n    ingredient: '',\n    amount: {}\n  }); //recipe name and array of ingredients\n\n  const [recipeState, setRecipeState] = useState({\n    recipe: '',\n    ingredients: []\n  }); // Push new ingredient to 'ingredients' array\n\n  const addIngredient = event => {\n    event.preventDefault();\n    setRecipeState({ //Add ingredient to array of objects in recipeState\n      ...recipeState,\n      ingredients: [...recipeState.ingredients, {\n        ingredient: formState.ingredient,\n        amount: { ...formState.amount\n        }\n      }]\n    }); // Reset ingredient input form to original state\n\n    setAddIngredientState({\n      ingredient: '',\n      amount: {}\n    });\n  }; // Each time text is entered to input, update addIngreState\n  //Ingredient Input\n\n\n  const handleNameChange = event => {\n    const {\n      value\n    } = event.target;\n    setFormState({ ...formState,\n      ingredient: value\n    });\n  }; //Amount Input\n\n\n  const handleAmountChange = event => {\n    const {\n      value\n    } = event.target;\n    const unit = document.getElementById('measurementSelect').firstChild.value;\n    setFormState({ ...formState,\n      amount: {\n        [state.measurementUnit]: {\n          value: value,\n          default: unit\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToggleMeasure, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: recipeState.ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(RenderIngredient, {\n        name: ingredient.ingredient,\n        amounts: ingredient.amounts,\n        measSystem: measSystem\n      }, ingredient.ingredient, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addIngredient,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Ingredient\",\n          id: \"ingredientNameInput\",\n          name: \"ingredient\",\n          value: addIngredientState.ingredient,\n          autoComplete: \"off\",\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Amount\",\n          id: \"ingredientAmtInput\",\n          name: \"amount\",\n          value: addIngredientState.amount,\n          onChange: handleAmountChange,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"measurementSelect\",\n        children: [measSystem === 'us_volume' && /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"imperialVolumeSelect\",\n          defaultValue: \"cups\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": 3785,\n            value: \"gallons\",\n            children: \"G\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": 946,\n            value: \"quarts\",\n            children: \"Q\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": 240,\n            value: \"cups\",\n            children: \"C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": 14.787,\n            value: \"tablespoons\",\n            children: \"T\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": 4.929,\n            value: \"teaspoons\",\n            children: \"t\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": 29.574,\n            value: \"fluid_ounces\",\n            children: \"fl. oz.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), measSystem === 'us_weight' && /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"imperialWeightSelect\",\n          defaultValue: \"ounces\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": 454,\n            value: \"pounds\",\n            children: \"lbs.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": 28.35,\n            value: \"ounces\",\n            children: \"oz.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), measSystem === 'metric_volume' && /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"metricVolumeSelect\",\n          defaultValue: \"milliliters\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": 1000,\n            value: \"liters\",\n            children: \"L\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": 1,\n            value: \"milliliters\",\n            children: \"mL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), measSystem === 'metric_weight' && /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"metricWeightSelect\",\n          defaultValue: \"grams\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": 1000,\n            value: \"kilograms\",\n            children: \"kg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": 1,\n            value: \"grams\",\n            children: \"g\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": .001,\n            value: \"milligrams\",\n            children: \"mg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewEditRecipe, \"0rJ0QjovY4TlBZxPYiju8sm5GCs=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = ViewEditRecipe;\n;\nexport default ViewEditRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewEditRecipe\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/src/components/ViewEditRecipe/index.js"],"names":["React","useEffect","useState","ToggleMeasure","RenderIngredient","useStoreContext","Ingredient","ViewEditRecipe","state","formState","setformState","ingredient","amount","recipeState","setRecipeState","recipe","ingredients","addIngredient","event","preventDefault","setAddIngredientState","handleNameChange","value","target","setFormState","handleAmountChange","unit","document","getElementById","firstChild","measurementUnit","default","map","amounts","measSystem","addIngredientState"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ToggleMeasure from '../ToggleMeasure';\nimport RenderIngredient from '../RenderIngredient';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { Ingredient } from '../../utils/Ingredient';\n\nfunction ViewEditRecipe() {\n    const [ state ] = useStoreContext();\n\n    const [formState, setformState] = useState({ \n        ingredient: '',\n        amount: {}\n    });\n\n    //recipe name and array of ingredients\n    const [recipeState, setRecipeState] = useState({ \n        recipe: '', \n        ingredients: []\n    });\n\n    // Push new ingredient to 'ingredients' array\n    const addIngredient = event => {\n        event.preventDefault();\n\n        setRecipeState({\n            //Add ingredient to array of objects in recipeState\n            ...recipeState,\n            ingredients: [...recipeState.ingredients, {\n                ingredient: formState.ingredient,\n                    amount: {\n                        ...formState.amount\n                    }  \n            }]\n        });\n\n        // Reset ingredient input form to original state\n        setAddIngredientState({\n            ingredient: '',\n            amount: {}\n        });\n    };\n\n    // Each time text is entered to input, update addIngreState\n    //Ingredient Input\n    const handleNameChange = event => {\n        const { value } = event.target;\n        setFormState({\n          ...formState,\n          ingredient: value\n        });\n    };\n\n    //Amount Input\n    const handleAmountChange = event => {\n        const { value } = event.target;\n        const unit = document.getElementById('measurementSelect').firstChild.value;\n        \n        setFormState({\n            ...formState,\n            amount: {\n                [state.measurementUnit]: {\n                    value: value,\n                    default: unit\n                }\n            }\n        });\n    };\n\n    return(\n        <div>\n            {/* Change measurement type here */}\n            <ToggleMeasure/>\n\n            {/* Map array of ingredients */}\n            <div>\n                    {recipeState.ingredients.map(ingredient => (\n                        <RenderIngredient key={ingredient.ingredient} name={ingredient.ingredient} amounts={ingredient.amounts} measSystem={measSystem}/>\n                    ))}\n            </div>\n\n            {/* Ingredient Input */}\n                <form onSubmit={addIngredient}>\n                    <div>\n                        <input type=\"text\" \n                            placeholder=\"Ingredient\" \n                            id='ingredientNameInput'\n                            name='ingredient'\n                            value={addIngredientState.ingredient}\n                            autoComplete=\"off\" \n                            onChange={handleNameChange}/>\n\n                        <input type=\"number\" \n                            placeholder=\"Amount\"\n                            id='ingredientAmtInput'\n                            name='amount'\n                            value={addIngredientState.amount}\n                            onChange={handleAmountChange}\n                            autoComplete=\"off\"/>\n                    </div>\n\n                    {/* Measurement Select, Displays each set of options conditionally based on state */}\n\n                    {/* if Imperial */}\n                    <div id='measurementSelect'>\n                        {(measSystem === 'us_volume') && (\n                        <select className=\"imperialVolumeSelect\" defaultValue='cups'>\n                            <option data-factor={3785} value=\"gallons\">G</option>\n                            <option data-factor={946} value=\"quarts\">Q</option>\n                            <option data-factor={240} value=\"cups\">C</option>\n                            <option data-factor={14.787} value=\"tablespoons\">T</option>\n                            <option data-factor={4.929} value=\"teaspoons\">t</option>\n                            <option data-factor={29.574} value=\"fluid_ounces\">fl. oz.</option>\n                        </select>\n                        )}\n                        \n                        {(measSystem === 'us_weight') && (\n                        <select className=\"imperialWeightSelect\" defaultValue=\"ounces\">\n                            <option data-factor={454} value=\"pounds\">lbs.</option>\n                            <option data-factor={28.35} value=\"ounces\">oz.</option>\n                        </select>\n                        )}\n                        {/* if Metric */}\n                        {(measSystem === 'metric_volume') && (\n                        <select className=\"metricVolumeSelect\" defaultValue=\"milliliters\">\n                            <option data-factor={1000} value=\"liters\">L</option>\n                            <option data-factor={1} value=\"milliliters\">mL</option>\n                        </select>\n                        )}\n\n                        {(measSystem === 'metric_weight') && (\n                        <select className=\"metricWeightSelect\" defaultValue=\"grams\">\n                            <option data-factor={1000} value=\"kilograms\">kg</option>\n                            <option data-factor={1} value=\"grams\">g</option>\n                            <option data-factor={.001} value=\"milligrams\">mg</option>\n                        </select>\n                        )}\n                    </div> \n                    {/* Add Ingredient Button */}\n                    <div>\n                        <input type=\"submit\" value=\"+\"></input>\n                    </div>\n                </form>\n        </div>\n    )\n};\n\nexport default ViewEditRecipe;"]},"metadata":{},"sourceType":"module"}