{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RenderIngredient = _ref => {\n  _s();\n\n  let {\n    data,\n    currentUnits\n  } = _ref;\n  const [state] = useStoreContext();\n  const globalSystem = state.globalSystem;\n  const globalUnit = state.globalUnit; //this is the state as a key of Ingredient object\n\n  const keyOfIngredient = `${globalSystem}_${globalUnit}`;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RenderIngredient, \"OjKJ3WWoA2ZQTKNXEIIIM9EJwiI=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = RenderIngredient;\nexport default RenderIngredient;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderIngredient\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.tsx"],"names":["React","useStoreContext","RenderIngredient","data","currentUnits","state","globalSystem","globalUnit","keyOfIngredient","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,eAAT,QAA6E,yBAA7E;AAEA,OAAO,aAAP;;;AAOA,MAAMC,gBAAgB,GAAG,QAAwD;AAAA;;AAAA,MAAvD;AAAEC,IAAAA,IAAF;AAASC,IAAAA;AAAT,GAAuD;AAC7E,QAAM,CAAEC,KAAF,IAAYJ,eAAe,EAAjC;AAEA,QAAMK,YAA2B,GAAGD,KAAK,CAACC,YAA1C;AACA,QAAMC,UAAuB,GAAGF,KAAK,CAACE,UAAtC,CAJ6E,CAM7E;;AACA,QAAMC,eAAgC,GAAI,GAAEF,YAAa,IAAGC,UAAW,EAAvE;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAxCD;;GAAMD,gB;UACgBD,e;;;KADhBC,gB;AA0CN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useStoreContext, GlobalSystems, GlobalUnits, KeyOfIngredient } from \"../../utils/GlobalState\";\nimport { Ingredient, UnitInterface } from \"../ViewEditRecipe/Ingredient\";\nimport './index.css';\n\ninterface RenderIngredientInterface {\n    data: Ingredient,\n    currentUnits: UnitInterface[]\n}\n\nconst RenderIngredient = ({ data , currentUnits }: RenderIngredientInterface) => {\n    const [ state ] = useStoreContext();\n\n    const globalSystem: GlobalSystems = state.globalSystem;\n    const globalUnit: GlobalUnits = state.globalUnit;\n\n    //this is the state as a key of Ingredient object\n    const keyOfIngredient: KeyOfIngredient = `${globalSystem}_${globalUnit}`;\n\n    console.log(data);\n\n    return(\n        <tbody>\n            {/* <tr>\n                <td className=\"ingredient-name\">{ingredient.name}</td>\n                <td className=\"ingredient-measurement\">\n                    {  ingredient.measurement\n                        ? (<div>{ingredient.measurement}</div>)\n                        : (<form>\n                            <input type=\"text\" placeholder=\"No Amt.\"/>\n                        </form>)\n                    }        \n                </td>\n                <td id='unitSelect' className=\"unit-select\">\n                    <select onChange={handleUnitChange} name='unit' value={ingredient.unit}>\n                        {currentUnits.map(thisUnit=> (\n\n                            <option value={thisUnit.unit} key={thisUnit.unit}> \n                            {thisUnit.abbrev} \n                            </option>\n\n                            ))}\n                    </select>\n                </td>\n                <td>\n                    <input type=\"number\"></input>\n                </td>\n            </tr> */}\n        </tbody>\n    )\n}\n\nexport default RenderIngredient;"]},"metadata":{},"sourceType":"module"}