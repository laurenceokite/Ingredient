{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport UnitSelect from \"../UnitSelect\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RenderIngredient = _ref => {\n  _s();\n\n  let {\n    data,\n    currentUnits\n  } = _ref;\n  const [state] = useStoreContext();\n  const [ingredient, setIngredient] = useState({});\n  const globalSystem = state.globalSystem;\n  const globalUnit = state.globalUnit; //this is the state as a key of Ingredient object\n\n  const keyOfIngredient = `${globalSystem}_${globalUnit}`;\n  let thisUnit = data.returnSelected(keyOfIngredient).unit;\n  let thisValue = data.returnSelected(keyOfIngredient).value;\n  useRef(() => {\n    thisUnit = data.returnSelected(keyOfIngredient).unit;\n    thisValue = data.returnSelected(keyOfIngredient).value;\n  });\n\n  const handleChangeUnit = event => {\n    const {\n      value\n    } = event.target;\n    data.updateSelected(keyOfIngredient, value);\n    setIngredient({}); // Hack to re render ingredient.. \n  };\n\n  const handleChangeValue = event => {\n    const {\n      value\n    } = event.target;\n    data.updateValue(keyOfIngredient, thisUnit, value);\n    setIngredient({}); // Hack to re render ingredient.. \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"ingredient-name\",\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"ingredient-measurement\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"No Amt.\",\n            value: thisValue ? thisValue : '',\n            onChange: handleChangeValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        id: \"unitSelect\",\n        className: \"unit-select\",\n        onChange: handleChangeUnit,\n        children: /*#__PURE__*/_jsxDEV(UnitSelect, {\n          ingredient: data,\n          currentUnits: currentUnits,\n          keyOfIngredient: keyOfIngredient,\n          selectedUnit: data.returnSelected(keyOfIngredient)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RenderIngredient, \"L16QcHJnwaDIhKcLsKfgau+5bm8=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = RenderIngredient;\nexport default RenderIngredient;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderIngredient\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/client/src/components/RenderIngredient/index.tsx"],"names":["React","useState","useRef","UnitSelect","useStoreContext","RenderIngredient","data","currentUnits","state","ingredient","setIngredient","globalSystem","globalUnit","keyOfIngredient","thisUnit","returnSelected","unit","thisValue","value","handleChangeUnit","event","target","updateSelected","handleChangeValue","updateValue","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport UnitSelect from \"../UnitSelect\";\nimport { useStoreContext, GlobalSystems, GlobalUnits, KeyOfIngredient } from \"../../utils/GlobalState\";\nimport { Ingredient, UnitInterface } from \"../ViewEditRecipe/Ingredient\";\nimport './index.css';\n\ninterface RenderIngredientInterface {\n    data: Ingredient,\n    currentUnits: UnitInterface[],\n}\n\nconst RenderIngredient = ({ data , currentUnits }: RenderIngredientInterface) => {\n    const [ state ] = useStoreContext();\n    const [ingredient, setIngredient] = useState({});\n\n    const globalSystem: GlobalSystems = state.globalSystem;\n    const globalUnit: GlobalUnits = state.globalUnit;\n\n    //this is the state as a key of Ingredient object\n    const keyOfIngredient: KeyOfIngredient = `${globalSystem}_${globalUnit}`;\n\n    let thisUnit = data.returnSelected(keyOfIngredient).unit;\n    let thisValue = data.returnSelected(keyOfIngredient).value;\n\n    useRef(() => {\n        thisUnit = data.returnSelected(keyOfIngredient).unit;\n        thisValue = data.returnSelected(keyOfIngredient).value;\n    });\n\n    const handleChangeUnit = (event: React.FormEvent): void => {\n        const { value } = event.target as HTMLFormElement;\n\n        data.updateSelected(keyOfIngredient, value);\n        setIngredient({}); // Hack to re render ingredient.. \n    }\n\n    const handleChangeValue = (event: React.FormEvent): void => {\n        const { value } = event.target as HTMLFormElement;\n\n        data.updateValue(keyOfIngredient, thisUnit, value);\n        setIngredient({}); // Hack to re render ingredient.. \n    }\n    \n    return(\n        <tbody>\n             <tr>\n                <td className=\"ingredient-name\">{data.name}</td>\n                <td className=\"ingredient-measurement\">\n                    <form>\n                        <input \n                            type=\"text\" \n                            placeholder=\"No Amt.\" \n                            value={thisValue ? thisValue : ''} \n                            onChange={handleChangeValue}\n                        />\n                    </form>\n                </td>\n                <td id='unitSelect' className=\"unit-select\" onChange={handleChangeUnit}>\n                    <UnitSelect \n                        ingredient={data}\n                        currentUnits={currentUnits}\n                        keyOfIngredient={keyOfIngredient}\n                        selectedUnit={data.returnSelected(keyOfIngredient)}\n                    />\n                </td>\n                <td>\n                    <input type=\"number\"></input>\n                </td>\n            </tr> \n        </tbody>\n    )\n}\n\nexport default RenderIngredient;"]},"metadata":{},"sourceType":"module"}