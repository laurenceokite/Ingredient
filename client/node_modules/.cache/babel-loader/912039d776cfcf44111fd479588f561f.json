{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/src/components/RenderIngredient/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport returnIngredient from \"./returnIngredient\";\nimport './renderIngredient.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderIngredient(_ref) {\n  _s();\n\n  let {\n    data,\n    currentUnits\n  } = _ref;\n  const [state] = useStoreContext();\n  const {\n    globalUnit: unit,\n    globalSystem: system\n  } = state;\n  const [requested, setRequested] = useState(); //reset requested dependent on state change of globalSystem\n\n  useEffect(() => {\n    setRequested();\n  }, [system]);\n  const ingredient = returnIngredient(data, unit, system, requested, state.autoConvert);\n\n  const handleUnitChange = event => {\n    const value = event.target.value;\n    setRequested(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: ingredient.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: ingredient.measurement ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ingredient.measurement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"No Amt.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      id: \"unitSelect\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleUnitChange,\n        name: \"unit\",\n        value: ingredient.unit,\n        children: Object.entries(currentUnits).map(_ref2 => {\n          let [key, obj] = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-factor\": obj.value,\n            value: key,\n            children: obj.abbrev\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RenderIngredient, \"tSSZALZnCS80tW5Qi/K5QJ9ol+Q=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = RenderIngredient;\nexport default RenderIngredient;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderIngredient\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/src/components/RenderIngredient/index.js"],"names":["React","useState","useEffect","useStoreContext","returnIngredient","RenderIngredient","data","currentUnits","state","globalUnit","unit","globalSystem","system","requested","setRequested","ingredient","autoConvert","handleUnitChange","event","value","target","name","measurement","Object","entries","map","key","obj","abbrev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAO,wBAAP;;;AAEA,SAASC,gBAAT,OAAkD;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAwB;AAC9C,QAAM,CAAEC,KAAF,IAAYL,eAAe,EAAjC;AACA,QAAM;AAAEM,IAAAA,UAAU,EAAEC,IAAd;AAAoBC,IAAAA,YAAY,EAAEC;AAAlC,MAA6CJ,KAAnD;AAEA,QAAM,CAAEK,SAAF,EAAaC,YAAb,IAA8Bb,QAAQ,EAA5C,CAJ8C,CAM9C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,YAAY;AACf,GAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;AAIA,QAAMG,UAAU,GAAGX,gBAAgB,CAACE,IAAD,EAAOI,IAAP,EAAaE,MAAb,EAAqBC,SAArB,EAAgCL,KAAK,CAACQ,WAAtC,CAAnC;;AAEA,QAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAC9B,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACAL,IAAAA,YAAY,CAACK,KAAD,CAAZ;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA,gBAAKJ,UAAU,CAACM;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACON,UAAU,CAACO,WAAX,gBACI;AAAA,kBAAMP,UAAU,CAACO;AAAjB;AAAA;AAAA;AAAA;AAAA,cADJ,gBAEI;AAAA,+BACC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAHX;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI;AAAI,MAAA,EAAE,EAAC,YAAP;AAAA,6BACI;AAAQ,QAAA,QAAQ,EAAEL,gBAAlB;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,KAAK,EAAEF,UAAU,CAACL,IAAlE;AAAA,kBACKa,MAAM,CAACC,OAAP,CAAejB,YAAf,EAA6BkB,GAA7B,CAAiC;AAAA,cAAC,CAACC,GAAD,EAAMC,GAAN,CAAD;AAAA,8BAC9B;AAAQ,2BAAaA,GAAG,CAACR,KAAzB;AACI,YAAA,KAAK,EAAEO,GADX;AAAA,sBAEeC,GAAG,CAACC;AAFnB,aAESF,GAFT;AAAA;AAAA;AAAA;AAAA,kBAD8B;AAAA,SAAjC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAxCQrB,gB;UACaF,e;;;KADbE,gB;AA0CT,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport returnIngredient from \"./returnIngredient\";\nimport './renderIngredient.css';\n\nfunction RenderIngredient({ data, currentUnits }) {\n    const [ state ] = useStoreContext();\n    const { globalUnit: unit, globalSystem: system } = state;\n\n    const [ requested, setRequested ] = useState();\n\n    //reset requested dependent on state change of globalSystem\n    useEffect(() => {\n        setRequested();\n    }, [system])\n\n    const ingredient = returnIngredient(data, unit, system, requested, state.autoConvert);\n\n    const handleUnitChange = event => {\n        const value = event.target.value;\n        setRequested(value);\n    }\n\n    return(\n        <tr>\n            <td>{ingredient.name}</td>\n            <td>\n                {  ingredient.measurement\n                    ? (<div>{ingredient.measurement}</div>)\n                    : (<form>\n                        <input type=\"text\" placeholder=\"No Amt.\"/>\n                    </form>)\n                }        \n            </td>\n            <td id='unitSelect'>\n                <select onChange={handleUnitChange} name='unit' value={ingredient.unit}>\n                    {Object.entries(currentUnits).map(([key, obj]) => (\n                        <option data-factor={obj.value} \n                            value={key} \n                            key={key}>{obj.abbrev}</option>\n                        ))}\n                </select>\n            </td>\n        </tr>\n    )\n}\n\nexport default RenderIngredient;"]},"metadata":{},"sourceType":"module"}