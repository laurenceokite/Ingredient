{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/client/src/components/Recipe/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { observer, useLocalObservable } from 'mobx-react-lite';\nimport { Stack, Form, Table } from 'react-bootstrap';\nimport ToggleGlobals from '../ToggleGlobals';\nimport RenderIngredient from '../RenderIngredient';\nimport UnitSelect from '../UnitSelect';\nimport { Ingredient } from './Ingredient';\nimport { Recipe } from './Recipe';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayRecipe = _s(observer(_c = _s(() => {\n  _s();\n\n  const recipe = useLocalObservable(() => new Recipe('metric', 'weight', 0));\n  const currentUnits = recipe.data.returnCurrentUnits(recipe.state);\n  const selectedUnit = recipe.data.returnSelected(recipe.state);\n  console.log(currentUnits, recipe.state); //form data is collected in the shape of new Ingredient params\n\n  const [formState, setFormState] = useState({\n    name: '',\n    value: 0,\n    unit: selectedUnit.unit,\n    state: recipe.state\n  });\n\n  const addIngredient = event => {\n    event.preventDefault();\n    recipe.addIngredient(new Ingredient(formState));\n    console.log(recipe); // Reset ingredient input form to original state\n\n    setFormState({\n      name: '',\n      value: 0,\n      unit: selectedUnit.unit,\n      state: recipe.state\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setFormState({ ...formState,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    gap: 3,\n    children: [/*#__PURE__*/_jsxDEV(ToggleGlobals, {\n      recipe: recipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      children: recipe.ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(RenderIngredient, {\n        recipe: recipe,\n        ingredient: ingredient\n      }, ingredient.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: addIngredient,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Ingredient\",\n          id: \"ingredientNameInput\",\n          name: \"name\",\n          value: formState.name,\n          autoComplete: \"off\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Amount\",\n          id: \"ingredientAmtInput\",\n          name: \"value\",\n          value: formState.value ? formState.value : '',\n          onChange: handleChange,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"measurementSelect\",\n        children: /*#__PURE__*/_jsxDEV(UnitSelect, {\n          currentUnits: currentUnits,\n          selectedUnit: selectedUnit,\n          ingredient: recipe.data,\n          state: recipe.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}, \"WWOO/IUJTsiYcWO3Fk0mqPewLiM=\", false, function () {\n  return [useLocalObservable];\n})), \"WWOO/IUJTsiYcWO3Fk0mqPewLiM=\", false, function () {\n  return [useLocalObservable];\n});\n\n_c2 = DisplayRecipe;\nexport default DisplayRecipe;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DisplayRecipe$observer\");\n$RefreshReg$(_c2, \"DisplayRecipe\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/client/src/components/Recipe/index.tsx"],"names":["React","useState","observer","useLocalObservable","Stack","Form","Table","ToggleGlobals","RenderIngredient","UnitSelect","Ingredient","Recipe","DisplayRecipe","recipe","currentUnits","data","returnCurrentUnits","state","selectedUnit","returnSelected","console","log","formState","setFormState","name","value","unit","addIngredient","event","preventDefault","handleChange","target","ingredients","map","ingredient"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { observer, useLocalObservable } from 'mobx-react-lite';\nimport { Stack, Form, Table } from 'react-bootstrap';\n\nimport ToggleGlobals from '../ToggleGlobals';\nimport RenderIngredient from '../RenderIngredient';\nimport UnitSelect from '../UnitSelect';\n\nimport { Ingredient, UnitInterface, IngredientDataInterface } from './Ingredient';\nimport { Recipe } from './Recipe';\n\nconst DisplayRecipe = observer(() => {\n\n\n    const recipe = useLocalObservable(() => new Recipe('metric', 'weight', 0));\n\n    const currentUnits: UnitInterface[] = recipe.data.returnCurrentUnits(recipe.state);\n    const selectedUnit: UnitInterface = recipe.data.returnSelected(recipe.state);\n\n    console.log(currentUnits, recipe.state)\n\n    //form data is collected in the shape of new Ingredient params\n    const [formState, setFormState] = useState<IngredientDataInterface>({ \n        name: '',\n        value: 0,\n        unit: selectedUnit.unit,\n        state: recipe.state\n    });\n\n    const addIngredient = (event: React.FormEvent): void => {\n        event.preventDefault();\n        \n        recipe.addIngredient(new Ingredient(formState))\n\n        console.log(recipe);\n        // Reset ingredient input form to original state\n        setFormState({\n            name: '',\n            value: 0,\n            unit: selectedUnit.unit,\n            state: recipe.state\n        });\n    };\n\n    const handleChange = (event: React.FormEvent): void => {\n        const { value, name } = event.target as HTMLFormElement;\n\n        setFormState({\n          ...formState,\n          [name]: value\n        });\n    };\n\n    return(\n        <Stack gap={3}>\n            {/* Change measurement type here */}\n            <ToggleGlobals recipe={recipe}/>\n\n            {/* Map array of ingredients */}\n            <Table striped bordered >\n                {recipe.ingredients.map((ingredient: Ingredient) => (\n                <RenderIngredient \n                    key={ingredient.name} \n                    recipe={recipe}\n                    ingredient={ingredient} \n                />     \n                ))}\n            </Table>\n\n            {/* Ingredient Input */}\n            <Form onSubmit={addIngredient}>\n                \n                    <Form.Group>\n                        <Form.Control type=\"text\" \n                            placeholder=\"Ingredient\" \n                            id='ingredientNameInput'\n                            name='name'\n                            value={formState.name}\n                            autoComplete=\"off\" \n                            onChange={handleChange}/>\n\n                        <Form.Control type=\"number\" \n                            placeholder=\"Amount\"\n                            id='ingredientAmtInput'\n                            name='value'\n                            value={formState.value?formState.value:''}\n                            onChange={handleChange}\n                            autoComplete=\"off\"/>\n                    </Form.Group>\n\n                    <div id='measurementSelect'>\n                        <UnitSelect \n                            currentUnits={currentUnits} \n                            selectedUnit={selectedUnit}\n                            ingredient={recipe.data}\n                            state={recipe.state}\n                        />\n                    </div> \n\n                {/* Add Ingredient Button */}\n                <input type=\"submit\" value=\"+\"></input>\n            </Form>\n        </Stack>\n    )\n});\n\n\n\nexport default DisplayRecipe;"]},"metadata":{},"sourceType":"module"}