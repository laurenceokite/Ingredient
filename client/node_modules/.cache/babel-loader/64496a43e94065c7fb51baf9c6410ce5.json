{"ast":null,"code":"var _jsxFileName = \"/Users/laurenceokite/Documents/projects/recipes/client/src/components/ToggleGlobals/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { CHANGE_GLOBAL_UNIT, CHANGE_GLOBAL_SYSTEM } from '../../utils/actions';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToggleGlobals = () => {\n  _s();\n\n  const [state, dispatch] = useStoreContext();\n\n  const handleUnitChange = event => {\n    const {\n      value\n    } = event.target;\n    dispatch({\n      type: CHANGE_GLOBAL_UNIT,\n      globalUnit: value\n    });\n    console.log(state, value);\n  };\n\n  const handleSystemChange = event => {\n    const {\n      value\n    } = event.target;\n    dispatch({\n      type: CHANGE_GLOBAL_SYSTEM,\n      globalSystem: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"toggle-measure\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleSystemChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"metric\",\n          children: \"M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"us\",\n          children: \"US\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleUnitChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"weight\",\n          children: \"WEIGHT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"volume\",\n          children: \"VOLUME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        defaultValue: state.recipeState.percent,\n        placeholder: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \" X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ToggleGlobals, \"AaULK2aEGk5riJKW01t0FPXyxro=\", false, function () {\n  return [useStoreContext];\n});\n\n_c = ToggleGlobals;\nexport default ToggleGlobals;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleGlobals\");","map":{"version":3,"sources":["/Users/laurenceokite/Documents/projects/recipes/client/src/components/ToggleGlobals/index.tsx"],"names":["React","useStoreContext","CHANGE_GLOBAL_UNIT","CHANGE_GLOBAL_SYSTEM","ToggleGlobals","state","dispatch","handleUnitChange","event","value","target","type","globalUnit","console","log","handleSystemChange","globalSystem","recipeState","percent"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,kBAAT,EAA6BC,oBAA7B,QAAyD,qBAAzD;AACA,OAAO,aAAP;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBL,eAAe,EAA3C;;AAEA,QAAMM,gBAAgB,GAAIC,KAAD,IAAmC;AACxD,UAAM;AAAEC,MAAAA;AAAF,QAAYD,KAAK,CAACE,MAAxB;AAEAJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAET,kBADD;AAELU,MAAAA,UAAU,EAAEH;AAFP,KAAD,CAAR;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ,EAAmBI,KAAnB;AACH,GARD;;AAUA,QAAMM,kBAAkB,GAAIP,KAAD,IAAkC;AACzD,UAAM;AAAEC,MAAAA;AAAF,QAAYD,KAAK,CAACE,MAAxB;AAEAJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAER,oBADD;AAELa,MAAAA,YAAY,EAAEP;AAFT,KAAD,CAAR;AAIH,GAPD;;AASA,sBACI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA,4BAEI;AAAA,8BAEI;AAAQ,QAAA,QAAQ,EAAEM,kBAAlB;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAQ,QAAA,QAAQ,EAAER,gBAAlB;AAAA,gCACQ;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAEQ;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAcI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,YAAY,EAAEF,KAAK,CAACY,WAAN,CAAkBC,OAArD;AAA8D,QAAA,WAAW,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA3CD;;GAAMd,a;UAC0BH,e;;;KAD1BG,a;AA6CN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { CHANGE_GLOBAL_UNIT, CHANGE_GLOBAL_SYSTEM } from '../../utils/actions';\nimport './index.css'\n\nconst ToggleGlobals = () => {\n    const [ state, dispatch ] = useStoreContext();\n\n    const handleUnitChange = (event: React.FormEvent): void =>  {\n        const { value } = event.target as HTMLFormElement;\n\n        dispatch({\n            type: CHANGE_GLOBAL_UNIT,\n            globalUnit: value\n        });\n        console.log(state, value);\n    }\n\n    const handleSystemChange = (event: React.FormEvent): void => {\n        const { value } = event.target as HTMLFormElement;\n\n        dispatch({\n            type: CHANGE_GLOBAL_SYSTEM,\n            globalSystem: value\n        }); \n    }\n\n    return (\n        <form className='toggle-measure'> \n            {/* Measurement Options */}\n            <div>\n                {/* system */}\n                <select onChange={handleSystemChange}>\n                    <option value=\"metric\">M</option>\n                    <option value=\"us\">US</option>\n                </select>\n                {/* type */}\n                <select onChange={handleUnitChange}>\n                        <option value=\"weight\">WEIGHT</option>\n                        <option value=\"volume\">VOLUME</option>\n                </select>\n            </div>\n            <div className='edit-percent'>\n                <input type='number' defaultValue={state.recipeState.percent} placeholder='100'></input>\n                <a> X</a>\n            </div>\n        </form>\n    )\n}\n\nexport default ToggleGlobals;"]},"metadata":{},"sourceType":"module"}